{"version":3,"file":"canvas-select.min.js","sources":["../src/tools.ts","../src/shape/Shape.ts","../src/shape/Rect.ts","../src/shape/Polygon.ts","../src/shape/Dot.ts","../src/EventBus.ts","../src/shape/Line.ts","../src/shape/Circle.ts","../src/shape/Grid.ts","../src/shape/Brush.ts","../src/shape/Mask.ts","../src/shape/Pencil.ts","../src/shape/BrushMask.ts","../node_modules/splaytree/index.js","../node_modules/martinez-polygon-clipping/src/edge_type.js","../node_modules/martinez-polygon-clipping/src/operation.js","../node_modules/martinez-polygon-clipping/src/compute_fields.js","../node_modules/martinez-polygon-clipping/src/sweep_event.js","../node_modules/martinez-polygon-clipping/src/equals.js","../node_modules/robust-predicates/esm/util.js","../node_modules/robust-predicates/esm/orient2d.js","../node_modules/martinez-polygon-clipping/src/signed_area.js","../node_modules/martinez-polygon-clipping/src/compare_events.js","../node_modules/martinez-polygon-clipping/src/divide_segment.js","../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../node_modules/martinez-polygon-clipping/src/compare_segments.js","../node_modules/martinez-polygon-clipping/src/contour.js","../node_modules/martinez-polygon-clipping/src/connect_edges.js","../node_modules/tinyqueue/index.js","../node_modules/martinez-polygon-clipping/src/fill_queue.js","../node_modules/martinez-polygon-clipping/src/index.js","../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../node_modules/martinez-polygon-clipping/index.js","../src/index.ts"],"sourcesContent":["import Shape from \"./shape/Shape\";\r\n\r\nexport function createUuid(): string {\r\n  const s: any[] = [];\r\n  const hexDigits = \"0123456789abcdef\";\r\n  for (let i = 0; i < 36; i++) {\r\n    const m = Math.floor(Math.random() * 0x10);\r\n    s[i] = hexDigits.slice(m, m + 1);\r\n  }\r\n  s[14] = \"4\";\r\n  const n = (s[19] & 0x3) | 0x8;\r\n  s[19] = hexDigits.slice(n, n + 1);\r\n  s[8] = s[13] = s[18] = s[23] = \"-\";\r\n  const uuid = s.join(\"\");\r\n  return uuid;\r\n}\r\n\r\n/**\r\n * 判断图形是否符合嵌套关系, 业务需求：只需要判断shape2所有的点是否都在shape1内部即可\r\n * @param shape1 参数1\r\n * @param shape2 参数2\r\n * @reutrn Boolean 符合条件返回true 否则返回false\r\n */\r\n\r\nexport function isNested(shape1: any, shape2: any): boolean {\r\n  if (shape1.type === 1 && shape2.type === 1) {\r\n    // 矩形和矩形的判断逻辑\r\n    const [[x1, y1], [x2, y2]] = shape1.coor;\r\n    const [[x3, y3], [x4, y4]] = shape2.coor;\r\n\r\n    // if (x1 >= x3 && y1 >= y3 && x2 <= x4 && y2 <= y4) {\r\n    //   return true; // shape1 嵌套在 shape2 内部\r\n    // } else\r\n    if (x1 <= x3 && y1 <= y3 && x2 >= x4 && y2 >= y4) {\r\n      return true; // shape2 嵌套在 shape1 内部\r\n    } else {\r\n      return false; // 两个矩形没有嵌套关系\r\n    }\r\n  } else if (shape1.type === 1 && shape2.type === 2) {\r\n    // 矩形和多边形的判断逻辑，确保多边形所有的坐标点都在矩形里面\r\n    const [[x1, y1], [x2, y2]] = shape1.coor;\r\n    const vertices = shape2.coor;\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const [x, y] = vertices[i];\r\n      if (x < x1 || x > x2 || y < y1 || y > y2) {\r\n        return false; // 多边形的顶点在矩形外部，不嵌套\r\n      }\r\n    }\r\n\r\n    return true; // 所有顶点都在矩形内部，嵌套关系成立\r\n  } else if (shape1.type === 2 && shape2.type === 1) {\r\n    // 多边形和矩形的判断逻辑，确保矩形的所有坐标点都在多边形里面\r\n    const vertices = shape2.coor; // 矩形的顶点坐标\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const [x, y] = vertices[i];\r\n      if (!isPointInPolygon(x, y, shape1.coor)) {\r\n        return false; // 有一个坐标点不在多边形范围内，返回false\r\n      }\r\n    }\r\n\r\n    return true; // 所有坐标点都在多边形内部，返回true\r\n  } else if (shape1.type === 2 && shape2.type === 2) {\r\n    // 多边形和多边形的判断逻辑\r\n    const vertices1 = shape1.coor;\r\n    const vertices2 = shape2.coor;\r\n\r\n    for (let i = 0; i < vertices2.length; i++) {\r\n      const [x, y] = vertices2[i];\r\n      if (!isPointInPolygon(x, y, vertices1)) {\r\n        return false; // 多边形2的顶点不都在多边形1内部，不嵌套\r\n      }\r\n    }\r\n\r\n    return true; // 有坐标点都在多边形内部，返回true\r\n  }\r\n}\r\n\r\nfunction isPointInPolygon(x: number, y: number, vertices: any) {\r\n  let inside = false;\r\n  const n = vertices.length;\r\n\r\n  for (let i = 0, j = n - 1; i < n; j = i++) {\r\n    const xi = vertices[i][0];\r\n    const yi = vertices[i][1];\r\n    const xj = vertices[j][0];\r\n    const yj = vertices[j][1];\r\n\r\n    if (yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi) {\r\n      inside = !inside;\r\n    }\r\n  }\r\n\r\n  return inside;\r\n}\r\n\r\n\r\n\r\n/**\r\n * 深拷贝函数\r\n */\r\nexport function deepClone<T>(obj: T, hash = new WeakMap()): T {\r\n  // 处理原始类型和 null、undefined\r\n  if (obj === null || typeof obj !== 'object') {\r\n    return obj;\r\n  }\r\n\r\n  // 处理循环引用\r\n  if (hash.has(obj)) {\r\n    return hash.get(obj);\r\n  }\r\n\r\n  // 处理 ImageData 对象\r\n  if (obj instanceof ImageData) {\r\n    // 创建一个新的 ImageData 对象，并拷贝其 data 属性\r\n    const newImageData = new ImageData(new Uint8ClampedArray(obj.data), obj.width, obj.height);\r\n    hash.set(obj, newImageData);\r\n    return newImageData as any;\r\n  }\r\n\r\n  // 处理 Date 对象\r\n  if (obj instanceof Date) {\r\n    return new Date(obj.getTime()) as any;\r\n  }\r\n\r\n  // 处理 RegExp 对象\r\n  if (obj instanceof RegExp) {\r\n    return new RegExp(obj.source, obj.flags) as any;\r\n  }\r\n\r\n  // 处理 Map 对象\r\n  if (obj instanceof Map) {\r\n    const result = new Map();\r\n    hash.set(obj, result);\r\n    obj.forEach((value, key) => {\r\n      result.set(deepClone(key, hash), deepClone(value, hash));\r\n    });\r\n    return result as any;\r\n  }\r\n\r\n  // 处理 Set 对象\r\n  if (obj instanceof Set) {\r\n    const result = new Set();\r\n    hash.set(obj, result);\r\n    obj.forEach(value => {\r\n      result.add(deepClone(value, hash));\r\n    });\r\n    return result as any;\r\n  }\r\n\r\n  // 处理数组\r\n  if (Array.isArray(obj)) {\r\n    const result: any[] = [];\r\n    hash.set(obj, result);\r\n    obj.forEach((item, index) => {\r\n      result[index] = deepClone(item, hash);\r\n    });\r\n    return result as T;\r\n  }\r\n\r\n  // 处理对象\r\n  const result = Object.create(Object.getPrototypeOf(obj));\r\n  hash.set(obj, result);\r\n\r\n  Reflect.ownKeys(obj).forEach(key => {\r\n    const value = (obj as any)[key];\r\n    result[key as keyof typeof result] = deepClone(value, hash);\r\n  });\r\n\r\n  return result as T;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * 判断两个对象的某些keys是否相等\r\n */\r\nexport function deepEqual(obj1: any, obj2: any, keysToCompare?: string[]): boolean {\r\n  // 如果两个对象或数组引用相同，直接返回 true\r\n  if (obj1 === obj2) return true;\r\n\r\n  // 如果 obj1 和 obj2 的 type 都为 8(Mask)，比较特定属性值\r\n  if (obj1.type === 8 && obj2.type === 8) {\r\n    const maskKeysToCompare = ['uuid', 'label', 'maskBase64'];\r\n    for (let key of maskKeysToCompare) {\r\n      if (obj1[key] !== obj2[key]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true; // 如果 uuid, label, maskBase64 都相等，返回 true\r\n  }\r\n\r\n  // 检查是否为对象或数组\r\n  if (typeof obj1 !== 'object' || obj1 === null ||\r\n    typeof obj2 !== 'object' || obj2 === null) {\r\n    return false;\r\n  }\r\n\r\n  // 如果是数组，比较数组长度并递归比较每个元素\r\n  if (Array.isArray(obj1) && Array.isArray(obj2)) {\r\n    if (obj1.length !== obj2.length) return false;\r\n    for (let i = 0; i < obj1.length; i++) {\r\n      if (!deepEqual(obj1[i], obj2[i], keysToCompare)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // 如果不是数组，则按对象处理\r\n  const keys1 = keysToCompare || Object.keys(obj1);\r\n\r\n  // 比较对象中的键值对\r\n  for (let key of keys1) {\r\n    if ((!(key in obj1) && (key in obj2) || ((key in obj1) && !(key in obj2))) || !deepEqual(obj1[key], obj2[key])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n\r\n","import { createUuid } from \"../tools\";\r\n\r\ninterface ShapeProp {\r\n  type: number;\r\n  [key: string]: any;\r\n}\r\nexport default class Shape {\r\n  /** 标签id */\r\n  public tagId: string = \"\";\r\n  /** 标签名称 */\r\n  public label: string = \"\";\r\n  /** 标注Id(数据库中获得) */\r\n  public labelId: string = \"\";\r\n  public labelType = 0; // 0: 标注标签 1: 参考标签 2: 智能标签\r\n  /** 是否隐藏标签 */\r\n  public hideLabel: boolean;\r\n  /** 是否有重叠 */\r\n  public truncated: number = 0;\r\n  /** 坐标 */\r\n  public coor: any[] = [];\r\n  /** 边线颜色 */\r\n  public strokeStyle: string;\r\n  /** 填充颜色 */\r\n  public fillStyle: string;\r\n  /** 边线宽度 */\r\n  public lineWidth: number;\r\n  /** 标签填充颜色 */\r\n  public labelFillStyle: string;\r\n  /** 标签文字颜色 */\r\n  public textFillStyle: string;\r\n  /** 标签文字字体 */\r\n  public labelFont: string;\r\n  /** 标签文字字型 */\r\n  public labelFontFamily: string;\r\n  /** 标签文字字号 */\r\n  public labelFontSize: number;\r\n  /** 1 矩形，2 多边形，3 点，4 折线，5 圆，6 网格 */\r\n  public type: number; // 形状\r\n  /** 当前是否处于活动状态 */\r\n  public active: boolean = false;\r\n  /** 当前是否处于创建状态 */\r\n  public creating: boolean = false;\r\n  /** 当前是否处于拖拽状态 */\r\n  public dragging: boolean = false;\r\n  /** 当前是否处于隐藏状态 */\r\n  public hiddening: boolean = false;\r\n  /** 当前是否处于锁定状态 */\r\n  public locking: boolean = false;\r\n  /** 备注 */\r\n  public remark: string;\r\n  /** 索引 */\r\n  public index: number;\r\n  /** 唯一标识 */\r\n  public uuid: string = createUuid();\r\n  /** 向上展示label */\r\n  public labelUp: boolean;\r\n  constructor(item: ShapeProp, index: number) {\r\n    this.index = index;\r\n    Object.assign(this, item);\r\n  }\r\n}\r\n","import Shape from \"./Shape\";\r\n\r\nexport default class Rect extends Shape {\r\n  public type = 1;\r\n  public iscontour = false;\r\n  constructor(item: any, index: number) {\r\n    super(item, index);\r\n    // this.iscontour = item.iscontour || this.iscontour // 智能标注框\r\n    // this.labelType = item.labelType || this.labelType; // 标签文字显示位置\r\n  }\r\n  get ctrlsData() {\r\n    const [[x0, y0], [x1, y1]] = this.coor;\r\n    return [\r\n      [x0, y0],\r\n      [x0 + (x1 - x0) / 2, y0],\r\n      [x1, y0],\r\n      [x1, y0 + (y1 - y0) / 2],\r\n      [x1, y1],\r\n      [x0 + (x1 - x0) / 2, y1],\r\n      [x0, y1],\r\n      [x0, y0 + (y1 - y0) / 2]\r\n    ];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Polygon extends Shape {\r\n  public type = 2\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n  }\r\n  get ctrlsData() {\r\n    return this.coor.length > 2 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Dot extends Shape {\r\n    public type = 3\r\n    public color = '' // 智能标注（SAM）时，green左键加点，red右键加点，''表示关键点（非智能标注点）\r\n    constructor(item: any, index: number) {\r\n        super(item, index)\r\n        this.color = item.color || this.color\r\n    }\r\n}\r\n","export default class EventBus {\r\n    private _eventTree: Record<string, any> = {}\r\n    /**\r\n   * 注册事件\r\n   * @param eventName 事件名称\r\n   * @param cb 回调方法\r\n   */\r\n    on(eventName: string, cb: Function) {\r\n        const fns = this._eventTree[eventName];\r\n        if (Array.isArray(fns)) {\r\n            fns.push(cb);\r\n        } else {\r\n            this._eventTree[eventName] = [cb];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发事件\r\n     * @param eventName 事件名称\r\n     * @param payload 传递参数\r\n     */\r\n    emit(eventName: string, ...payload: any) {\r\n        const fns = this._eventTree[eventName];\r\n        if (Array.isArray(fns)) {\r\n            fns.forEach((fn) => fn(...payload));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     * @param eventName 事件名称\r\n     * @param cb 传递参数\r\n     */\r\n    off(eventName: string, cb: Function) {\r\n        const fns = this._eventTree[eventName];\r\n        const index = fns.find((fn: Function) => fn === cb);\r\n        if (Array.isArray(fns) && index) {\r\n            fns.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n","import Shape from \"./Shape\";\r\n\r\nexport default class Line extends Shape {\r\n  public type = 4;\r\n\r\n  constructor(item: any, index: number) {\r\n    super(item, index);\r\n  }\r\n  get ctrlsData() {\r\n    return this.coor.length > 1 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Circle extends Shape {\r\n    public type = 5\r\n    public radius = 0\r\n    constructor(item: any, index: number) {\r\n        super(item, index)\r\n        this.radius = item.radius || this.radius\r\n    }\r\n    get ctrlsData() {\r\n        const [x, y] = this.coor\r\n        return [\r\n            [x, y - this.radius],\r\n            [x + this.radius, y],\r\n            [x, y + this.radius],\r\n            [x - this.radius, y]\r\n        ]\r\n    }\r\n}\r\n","import Shape from './Shape';\r\nimport Rect from './Rect'\r\n\r\nexport default class Grid extends Shape {\r\n  public type = 6\r\n  public row = 1\r\n  public col = 1\r\n  public selected: number[] = []\r\n  public selectedFillStyle: string\r\n\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n    this.row = item.row > 0 ? item.row : this.row\r\n    this.col = item.col > 0 ? item.col : this.col\r\n    this.selected = Array.isArray(item.selected) ? item.selected : []\r\n  }\r\n\r\n  get ctrlsData() {\r\n    const [[x0, y0], [x1, y1]] = this.coor;\r\n    return [\r\n      [x0, y0],\r\n      [x0 + (x1 - x0) / 2, y0],\r\n      [x1, y0],\r\n      [x1, y0 + (y1 - y0) / 2],\r\n      [x1, y1],\r\n      [x0 + (x1 - x0) / 2, y1],\r\n      [x0, y1],\r\n      [x0, y0 + (y1 - y0) / 2],\r\n    ];\r\n  }\r\n\r\n  get gridRects() {\r\n    const [[x0, y0], [x1, y1]] = this.coor;\r\n    const { row, col, strokeStyle, fillStyle, active, creating, lineWidth } = this;\r\n    const w = (x1 - x0) / this.col;\r\n    const h = (y1 - y0) / this.row;\r\n    const list: Rect[] = []\r\n    for (let i = 0; i < row; i++) {\r\n      for (let j = 0; j < col; j++) {\r\n        const startPoint = [x0 + j * w, y0 + i * h];\r\n        const index = i * col + j;\r\n        const shape = new Rect({\r\n          coor: [startPoint, [startPoint[0] + w, startPoint[1] + h]],\r\n          strokeStyle, fillStyle, active, creating, lineWidth\r\n        }, index);\r\n        list.push(shape)\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n}\r\n","import Shape from \"./Shape\";\r\n\r\nexport default class Brush extends Shape {\r\n  public type = 7;\r\n  public brushWidth: number = 1;\r\n  public iseraser = false;\r\n  public boundingRect: number[] = [];\r\n  constructor(item: any, index: number) {\r\n    super(item, index);\r\n    this.iseraser = item.iseraser || this.iseraser;\r\n    this.boundingRect = item.boundingRect || this.boundingRect;\r\n  }\r\n\r\n  get ctrlsData() {\r\n    return this.coor.length > 3 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\ninterface MagicPoint {\r\n  coor: [number, number];\r\n  color: string;\r\n}\r\n\r\nexport default class Mask extends Shape {\r\n  public type = 8\r\n  public maskType = '' //everything || click || reat\r\n  public maskBase64 = ''\r\n  public pixels :number[] = []\r\n  public canvasData :ImageData = null \r\n  // public rectcoor = ''\r\n  public height = 0\r\n  public weight = 0\r\n  public maskToPolygon = false\r\n  public magicPoints : MagicPoint[] = []\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n    this.maskType = item.maskType || ''\r\n    this.maskBase64 = item.maskBase64 || ''\r\n    this.pixels = item.pixels || []\r\n    this.canvasData = item.canvasData || null\r\n    this.height = item.height || 0\r\n    this.weight = item.weight || 0\r\n    // this.rectcoor = item.rectcoor || this.rectcoor\r\n    this.maskToPolygon = item.maskToPolygon || false\r\n    this.magicPoints = item.magicPoints || []\r\n  }\r\n\r\n}\r\n","import Shape from \"./Shape\";\r\n\r\nexport default class Line extends Shape {\r\n  public type = 9;\r\n  public boundingRect: number[] = [];\r\n  // public outerCoor: any[] = [];\r\n  // public innerCoor: any[][] = [];\r\n  constructor(item: any, index: number) {\r\n    super(item, index);\r\n    this.boundingRect = item.boundingRect || this.boundingRect;\r\n    // this.outerCoor = item.outerCoor || this.outerCoor;\r\n    // this.innerCoor = item.innerCoor || this.innerCoor;\r\n  }\r\n  get ctrlsData() {\r\n    return this.coor.length > 3 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from \"./Shape\";\r\n\r\nexport default class BrushMask extends Shape {\r\n  public type = 10;\r\n  public encodePixelData: number[] = [];\r\n  public startPoint: [number, number] = [0, 0];\r\n  public width = 0;\r\n  public height = 0;\r\n  constructor(item: any, index: number) {\r\n    super(item, index);\r\n    this.encodePixelData = item.encodePixelData || [];\r\n    this.startPoint = item.startPoint || [0, 0];\r\n    this.width = item.width || 0;\r\n    this.height = item.height || 0;\r\n  }\r\n}\r\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  let isInResult = inResult(event, operation);\n  if (isInResult) {\n    event.resultTransition = determineResultTransition(event, operation);\n  } else {\n    event.resultTransition = 0;\n  }\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n\n\nfunction determineResultTransition(event, operation) {\n  let thisIn = !event.inOut;\n  let thatIn = !event.otherInOut;\n\n  let isIn;\n  switch (operation) {\n    case INTERSECTION:\n      isIn = thisIn && thatIn; break;\n    case UNION:\n      isIn = thisIn || thatIn; break;\n    case XOR:\n      isIn = thisIn ^ thatIn; break;\n    case DIFFERENCE:\n      if (event.isSubject) {\n        isIn = thisIn && !thatIn;\n      } else {\n        isIn = thatIn && !thisIn;\n      }\n      break;\n  }\n  return isIn ? +1 : -1;\n}\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Type of result transition (0 = not in result, +1 = out-in, -1, in-out)\n     * @type {Number}\n     */\n    this.resultTransition = 0;\n\n    // connection step\n\n    /**\n     * @type {Number}\n     */\n    this.otherPos = -1;\n\n    /**\n     * @type {Number}\n     */\n    this.outputContourId = -1;\n\n    this.isExteriorRing = true;   // TODO: Looks unused, remove?\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  /**\n   * Does event belong to result?\n   * @return {Boolean}\n   */\n  get inResult() {\n    return this.resultTransition !== 0;\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.contourId        = this.contourId;\n    copy.resultTransition = this.resultTransition;\n    copy.prevInResult     = this.prevInResult;\n    copy.isExteriorRing   = this.isExteriorRing;\n    copy.inOut            = this.inOut;\n    copy.otherInOut       = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import {orient2d} from 'robust-predicates';\n\n/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  const res = orient2d(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]);\n  if (res > 0) return -1;\n  if (res < 0) return 1;\n  return 0;\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","export default class Contour {\n\n  /**\n   * Contour\n   *\n   * @class {Contour}\n   */\n  constructor() {\n    this.points = [];\n    this.holeIds = [];\n    this.holeOf = null;\n    this.depth = null;\n  }\n\n  isExterior() {\n    return this.holeOf == null;\n  }\n\n}\n","import compareEvents from './compare_events';\nimport Contour from './contour';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.otherPos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.otherPos;\n      event.otherPos = event.otherEvent.otherPos;\n      event.otherEvent.otherPos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origPos) {\n  let newPos = pos + 1,\n    p = resultEvents[pos].point,\n    p1;\n  const length = resultEvents.length;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else {\n      newPos++;\n    }\n    if (newPos < length) {\n      p1 = resultEvents[newPos].point;\n    }\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos > origPos) {\n    newPos--;\n  }\n\n  return newPos;\n}\n\n\nfunction initializeContourFromContext(event, contours, contourId) {\n  const contour = new Contour();\n  if (event.prevInResult != null) {\n    const prevInResult = event.prevInResult;\n    // Note that it is valid to query the \"previous in result\" for its output contour id,\n    // because we must have already processed it (i.e., assigned an output contour id)\n    // in an earlier iteration, otherwise it wouldn't be possible that it is \"previous in\n    // result\".\n    const lowerContourId = prevInResult.outputContourId;\n    const lowerResultTransition = prevInResult.resultTransition;\n    if (lowerResultTransition > 0) {\n      // We are inside. Now we have to check if the thing below us is another hole or\n      // an exterior contour.\n      const lowerContour = contours[lowerContourId];\n      if (lowerContour.holeOf != null) {\n        // The lower contour is a hole => Connect the new contour as a hole to its parent,\n        // and use same depth.\n        const parentContourId = lowerContour.holeOf;\n        contours[parentContourId].holeIds.push(contourId);\n        contour.holeOf = parentContourId;\n        contour.depth = contours[lowerContourId].depth;\n      } else {\n        // The lower contour is an exterior contour => Connect the new contour as a hole,\n        // and increment depth.\n        contours[lowerContourId].holeIds.push(contourId);\n        contour.holeOf = lowerContourId;\n        contour.depth = contours[lowerContourId].depth + 1;\n      }\n    } else {\n      // We are outside => this contour is an exterior contour of same depth.\n      contour.holeOf = null;\n      contour.depth = contours[lowerContourId].depth;\n    }\n  } else {\n    // There is no lower/previous contour => this contour is an exterior contour of depth 0.\n    contour.holeOf = null;\n    contour.depth = 0;\n  }\n  return contour;\n}\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const contours = [];\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n\n    if (processed[i]) {\n      continue;\n    }\n\n    const contourId = contours.length;\n    const contour = initializeContourFromContext(resultEvents[i], contours, contourId);\n\n    // Helper function that combines marking an event as processed with assigning its output contour ID\n    const markAsProcessed = (pos) => {\n      processed[pos] = true;\n      if (pos < resultEvents.length && resultEvents[pos]) {\n        resultEvents[pos].outputContourId = contourId;\n      }\n    };\n\n    let pos = i;\n    let origPos = i;\n\n    const initial = resultEvents[i].point;\n    contour.points.push(initial);\n\n    /* eslint no-constant-condition: \"off\" */\n    while (true) {\n      markAsProcessed(pos);\n\n      pos = resultEvents[pos].otherPos;\n\n      markAsProcessed(pos);\n      contour.points.push(resultEvents[pos].point);\n\n      pos = nextPos(pos, resultEvents, processed, origPos);\n\n      if (pos == origPos || pos >= resultEvents.length || !resultEvents[pos]) {\n        break;\n      }\n    }\n\n    contours.push(contour);\n  }\n\n  return contours;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  // console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  // console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  // console.time('connect vertices');\n  const contours = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n\n  // Convert contours to polygons\n  const polygons = [];\n  for (let i = 0; i < contours.length; i++) {\n    let contour = contours[i];\n    if (contour.isExterior()) {\n      // The exterior ring goes first\n      let rings = [contour.points];\n      // Followed by holes if any\n      for (let j = 0; j < contour.holeIds.length; j++) {\n        let holeId = contour.holeIds[j];\n        rings.push(contours[holeId].points);\n      }\n      polygons.push(rings);\n    }\n  }\n\n  return polygons;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(next.key, event, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","import boolean from './src/';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n} from './src/operation';\n\nexport function union (subject, clipping) {\n  return boolean(subject, clipping, UNION);\n}\n\nexport function diff (subject, clipping) {\n  return boolean(subject, clipping, DIFFERENCE);\n}\n\nexport function xor (subject, clipping) {\n  return boolean(subject, clipping, XOR);\n}\n\nexport function intersection (subject, clipping) {\n  return boolean(subject, clipping, INTERSECTION);\n}\n\n/**\n * @enum {Number}\n */\nexport const operations = { UNION, DIFFERENCE, INTERSECTION, XOR };\n","import Rect from \"./shape/Rect\";\r\nimport Polygon from \"./shape/Polygon\";\r\nimport Dot from \"./shape/Dot\";\r\nimport EventBus from \"./EventBus\";\r\nimport Line from \"./shape/Line\";\r\nimport Circle from \"./shape/Circle\";\r\nimport Grid from \"./shape/Grid\";\r\nimport Brush from \"./shape/Brush\";\r\nimport Mask from \"./shape/Mask\";\r\nimport Pencil from \"./shape/Pencil\";\r\nimport BrushMask from \"./shape/BrushMask\";\r\nimport pkg from \"../package.json\";\r\nimport { isNested, createUuid, deepClone, deepEqual } from \"./tools\";\r\nimport * as martinez from \"martinez-polygon-clipping\";\r\n\r\nexport type Point = [number, number];\r\nexport type AllShape =\r\n  | Rect\r\n  | Polygon\r\n  | Dot\r\n  | Line\r\n  | Circle\r\n  | Grid\r\n  | Brush\r\n  | Mask\r\n  | Pencil\r\n  | BrushMask;\r\nenum Shape {\r\n  None,\r\n  Rect,\r\n  Polygon,\r\n  Dot,\r\n  Line,\r\n  Circle,\r\n  Grid,\r\n  Brush,\r\n  Mask,\r\n  Pencil,\r\n  BrushMask\r\n}\r\n\r\ninterface MagicPoint {\r\n  coor: [number, number];\r\n  color: string;\r\n}\r\nexport default class CanvasSelect extends EventBus {\r\n  /** 当前版本 */\r\n  version = pkg.version;\r\n  /** 只读模式，画布不允许任何交互 */\r\n  lock: boolean = false;\r\n  /** 只读模式，仅支持查看 */\r\n  readonly: boolean = false;\r\n  /** 最小矩形宽度 */\r\n  MIN_WIDTH = 10;\r\n  /** 最小矩形高度 */\r\n  MIN_HEIGHT = 10;\r\n  /** 最小圆形半径 */\r\n  MIN_RADIUS = 5;\r\n  /** 最小轨迹点数 */\r\n  MIN_POINTNUM = 3;\r\n  /** 缩放图像的最小边长 */\r\n  MIN_LENGTH = 140;\r\n  /** 边线颜色 */\r\n  strokeStyle = \"#000\";\r\n  /** 填充颜色 */\r\n  fillStyle = \"rgba(0, 0, 255, 0.1)\";\r\n  /** 边线宽度 */\r\n  lineWidth = 2;\r\n  /** 当前选中的标注边线颜色 */\r\n  activeStrokeStyle = \"#000\";\r\n  /** 当前选中的标注填充颜色 */\r\n  activeFillStyle = \"#000\";\r\n  /** 控制点边线颜色 */\r\n  ctrlStrokeStyle = \"#000\";\r\n  /** 控制点填充颜色 */\r\n  ctrlFillStyle = \"#fff\";\r\n  /** 控制点半径 */\r\n  ctrlRadius = 3;\r\n  /** 是否隐藏标签 */\r\n  hideLabel = false;\r\n  /** 标签背景填充颜色 */\r\n  labelFillStyle = \"rgba(255, 255, 255, 0.5)\";\r\n  /** 标签字体 */\r\n  // labelFont = '12px sans-serif';\r\n  /** 标签字型 */\r\n  labelFontFamily = \"sans-serif\";\r\n  /** 标签字号 */\r\n  labelFontSize = 18;\r\n  /** 标签文字颜色 */\r\n  textFillStyle = \"#FFFFFF\";\r\n  /** 标签字符最大长度，超出使用省略号 */\r\n  labelMaxLen = 10;\r\n  /** 画布宽度 */\r\n  WIDTH = 0;\r\n  /** 画布高度 */\r\n  HEIGHT = 0;\r\n  /** 背景图src */\r\n  imagesrc = \"\";\r\n  imagealpha = 1;\r\n\r\n  canvas: HTMLCanvasElement;\r\n\r\n  ctx: CanvasRenderingContext2D;\r\n  /** 变化前的所有标注数据 */\r\n  olddataset: AllShape[] = [];\r\n  /** 所有标注数据 */\r\n  dataset: AllShape[] = [];\r\n\r\n  /** 撤销数组最多保存记录条数 */\r\n  MAX_LENGTH = 10;\r\n\r\n  // 保存一次完成的修改后的记录(触发按钮事件或鼠标抬起)\r\n  doneList: AllShape[][] = [];\r\n\r\n  // 保存撤销的记录\r\n  undoList: AllShape[][] = [];\r\n\r\n  /** 记录所有隐藏图形的uuid*/\r\n  hideList: string[] = [];\r\n\r\n  offScreen: HTMLCanvasElement;\r\n\r\n  offScreenCtx: CanvasRenderingContext2D;\r\n  /** 记录锚点距离 */\r\n  remmber: number[][];\r\n  /** 记录鼠标位置 */\r\n  mouse: Point;\r\n  /** 记录背景图鼠标位移 */\r\n  remmberOrigin: number[] = [0, 0];\r\n  /** 0 不创建，1 矩形，2 多边形，3 点，4 折线，5 圆，6 网格, 7 刷子brush, 8 Mask，9 钢笔 */\r\n  createType: Shape = Shape.None; //\r\n  /** 控制点索引 */\r\n  ctrlIndex = -1;\r\n  /** 选中控制点索引 */\r\n  clickIndex = -1;\r\n  /** 背景图片 */\r\n  image: HTMLImageElement = new Image();\r\n  /** 图片原始宽度 */\r\n  IMAGE_ORIGIN_WIDTH: number;\r\n  /** 图片缩放宽度 */\r\n  IMAGE_WIDTH = 0;\r\n  /** 图片原始高度 */\r\n  IMAGE_ORIGIN_HEIGHT = 0;\r\n  /** 图片缩放高度 */\r\n  IMAGE_HEIGHT = 0;\r\n  /** 原点x */\r\n  originX = 0;\r\n  /** 原点y */\r\n  originY = 0;\r\n  /** 图片缩放步长 */\r\n  scaleStep = 0;\r\n  /** 标签名缩放步长 */\r\n  textscaleStep = 0;\r\n  /** 滚动缩放 */\r\n  scrollZoom = true;\r\n\r\n  private timer: any;\r\n  /** 最小touch双击时间 */\r\n  dblTouch = 300;\r\n  /** 记录touch双击开始时间 */\r\n  dblTouchStore = 0; //\r\n  /** 这个选项可以帮助浏览器进行内部优化 */\r\n  alpha = true;\r\n  /** 专注模式 */\r\n  focusMode = false;\r\n  /** 记录当前事件 */\r\n  private evt: MouseEvent | TouchEvent | KeyboardEvent;\r\n  /** 触控缩放时记录上一次两点距离 */\r\n  scaleTouchStore = 0;\r\n  /** 当前是否为双指触控 */\r\n  isTouch2 = false;\r\n  isMobile = navigator.userAgent.includes(\"Mobile\");\r\n  /** 向上展示label */\r\n  labelUp = false;\r\n  private isCtrlKey = false;\r\n  /** 自定义ctrl快捷键 KeyboardEvent.code */\r\n  ctrlCode = \"ControlLeft\";\r\n  /** 网格右键菜单 */\r\n  gridMenuEnable = true;\r\n  /** 网格选中背景填充颜色 */\r\n  gridSelectedFillStyle = \"rgba(255, 255, 0, 0.8)\";\r\n\r\n  /** 记录是否正在使用brush */\r\n  ispainting = false;\r\n\r\n  /** brush线条样式 */\r\n  brushlineWidth = 1;\r\n  brushstrokeStyle = \"rgba(255, 0, 0, 0.8)\";\r\n\r\n  pencillineWidth = 0.5;\r\n  pencilstrokeStyle = \"rgba(255, 0, 0, 0.8)\";\r\n\r\n  // maskfillStyle = \"rgba(255, 0, 0, 0.5)\";\r\n  mask_alpha = 96;\r\n  densityFactor = 1;\r\n\r\n  /** 记录正在生成轮廓的mask的canvasData */\r\n  activeCanvasData: ImageData | null = null;\r\n  /** 记录正在生成的轮廓 */\r\n  activePolygon: string = \"\";\r\n\r\n  isEraser = false;\r\n  isErasing = false;\r\n\r\n  eraserPoints: [number, number][] = [];\r\n\r\n  /** 暂存未保存的brush轨迹点 */\r\n  tempBrushPoints: [number, number][] = [];\r\n\r\n  eraserSize = 8; // 橡皮擦的半径\r\n\r\n  random_color = [\r\n    { r: 255, g: 0, b: 0 },\r\n    { r: 0, g: 255, b: 0 },\r\n    { r: 0, b: 255, g: 0 }\r\n  ];\r\n\r\n  isMagicToolActive = false;\r\n\r\n  magicPoints: MagicPoint[] = [];\r\n\r\n  maxLinePointCount = 2;\r\n\r\n  /**\r\n   * @param el Valid CSS selector string, or DOM\r\n   * @param src image src\r\n   */\r\n  constructor(el: HTMLCanvasElement | string, src?: string) {\r\n    super();\r\n    this.handleLoad = this.handleLoad.bind(this);\r\n    this.handleContextmenu = this.handleContextmenu.bind(this);\r\n    this.handleMousewheel = this.handleMousewheel.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleDblclick = this.handleDblclick.bind(this);\r\n    this.handleKeyup = this.handleKeyup.bind(this);\r\n    this.handleKeydown = this.handleKeydown.bind(this);\r\n    const container = typeof el === \"string\" ? document.querySelector(el) : el;\r\n    if (container instanceof HTMLCanvasElement) {\r\n      this.canvas = container;\r\n      this.offScreen = document.createElement(\"canvas\");\r\n      this.imagesrc = src;\r\n      this.initSetting();\r\n      this.initEvents();\r\n      src && this.setImage(src);\r\n      for (let i = 1; i <= 255; i++) {\r\n        const red = Math.floor(Math.random() * 256);\r\n        const green = Math.floor(Math.random() * 256);\r\n        const blue = Math.floor(Math.random() * 256);\r\n        this.random_color[i] = { r: red, g: green, b: blue };\r\n      }\r\n    } else {\r\n      console.warn(\"HTMLCanvasElement is required!\");\r\n    }\r\n  }\r\n\r\n  /** 当前选中的标注 */\r\n  get activeShape() {\r\n    return this.dataset.find((x) => x.active) || ({} as any);\r\n  }\r\n\r\n  /** 当前缩放比例 */\r\n  get scale() {\r\n    if (this.IMAGE_ORIGIN_WIDTH && this.IMAGE_WIDTH) {\r\n      return this.IMAGE_WIDTH / this.IMAGE_ORIGIN_WIDTH;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  /** 图片最小边尺寸 */\r\n  get imageMin() {\r\n    return Math.min(this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\r\n  }\r\n\r\n  /** 图片原始最大边尺寸 */\r\n  get imageOriginMax() {\r\n    return Math.max(this.IMAGE_ORIGIN_WIDTH, this.IMAGE_ORIGIN_HEIGHT);\r\n  }\r\n\r\n  /** 合成事件 */\r\n  private mergeEvent(e: TouchEvent | MouseEvent) {\r\n    let mouseX = 0;\r\n    let mouseY = 0;\r\n    let mouseCX = 0;\r\n    let mouseCY = 0;\r\n    if (this.isMobile) {\r\n      const { clientX, clientY } = (e as TouchEvent).touches[0];\r\n      const target = e.target as HTMLCanvasElement;\r\n      const { left, top } = target.getBoundingClientRect();\r\n      mouseX = Math.round(clientX - left);\r\n      mouseY = Math.round(clientY - top);\r\n      if ((e as TouchEvent).touches.length === 2) {\r\n        const { clientX: clientX1 = 0, clientY: clientY1 = 0 } =\r\n          (e as TouchEvent).touches[1] || {};\r\n        mouseCX = Math.round(\r\n          Math.abs((clientX1 - clientX) / 2 + clientX) - left\r\n        );\r\n        mouseCY = Math.round(\r\n          Math.abs((clientY1 - clientY) / 2 + clientY) - top\r\n        );\r\n      }\r\n    } else {\r\n      mouseX = (e as MouseEvent).offsetX;\r\n      mouseY = (e as MouseEvent).offsetY;\r\n    }\r\n    return { ...e, mouseX, mouseY, mouseCX, mouseCY };\r\n  }\r\n\r\n  private handleLoad() {\r\n    this.emit(\"load\", this.image.src);\r\n    this.IMAGE_ORIGIN_WIDTH = this.IMAGE_WIDTH = this.image.width;\r\n    this.IMAGE_ORIGIN_HEIGHT = this.IMAGE_HEIGHT = this.image.height;\r\n    this.fitZoom();\r\n  }\r\n\r\n  private handleContextmenu(e: MouseEvent) {\r\n    e.preventDefault();\r\n    this.evt = e;\r\n    if (this.lock) return;\r\n  }\r\n\r\n  private handleMousewheel(e: WheelEvent) {\r\n    e.stopPropagation();\r\n    this.evt = e;\r\n    if (this.lock || !this.scrollZoom) return;\r\n    const { mouseX, mouseY } = this.mergeEvent(e);\r\n    this.mouse = [mouseX, mouseY];\r\n\r\n    if (\r\n      (e.deltaY > 0 && this.imageMin < this.MIN_LENGTH) ||\r\n      (e.deltaY < 0 && this.IMAGE_WIDTH > this.imageOriginMax * 10)\r\n    ) {\r\n      return;\r\n    } else {\r\n      if (e.deltaY < 0) {\r\n        this.textscaleStep++;\r\n      } else {\r\n        this.textscaleStep--;\r\n      }\r\n      this.setScale(e.deltaY < 0, true);\r\n    }\r\n  }\r\n\r\n  private handleMouseDown(e: MouseEvent | TouchEvent) {\r\n    e.stopPropagation();\r\n    this.evt = e;\r\n    if (this.lock) return;\r\n    const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e);\r\n    const offsetX = Math.round(mouseX / this.scale);\r\n    const offsetY = Math.round(mouseY / this.scale);\r\n    this.mouse =\r\n      this.isMobile && (e as TouchEvent).touches.length === 2\r\n        ? [mouseCX, mouseCY]\r\n        : [mouseX, mouseY];\r\n    this.remmberOrigin = [mouseX - this.originX, mouseY - this.originY];\r\n    // 记录变化前的数据\r\n    this.olddataset = deepClone(this.dataset);\r\n    if (\r\n      (!this.isMobile && (e as MouseEvent).buttons === 1) ||\r\n      (this.isMobile && (e as TouchEvent).touches.length === 1)\r\n    ) {\r\n      // 鼠标左键\r\n      const ctrls = this.activeShape.ctrlsData || [];\r\n      this.ctrlIndex = ctrls.findIndex((coor: Point) =>\r\n        this.isPointInCircle(this.mouse, coor, this.ctrlRadius)\r\n      );\r\n      this.clickIndex = this.ctrlIndex; // 记录选中的控制点索引，用于控制点加粗变红和编辑控制点\r\n      if (this.ctrlIndex > -1 && !this.readonly) {\r\n        // 点击到控制点\r\n        console.log(\"this.ctrlIndex\", this.ctrlIndex);\r\n        const [x0, y0] = ctrls[this.ctrlIndex];\r\n        if (\r\n          this.activeShape.type === Shape.Polygon &&\r\n          this.activeShape.coor.length > 2 &&\r\n          this.ctrlIndex === 0\r\n        ) {\r\n          this.handleDblclick(e);\r\n        } else {\r\n          this.update();\r\n        }\r\n        this.remmber = [[offsetX - x0, offsetY - y0]];\r\n      } else if (this.isInBackground(e)) {\r\n        if (this.activeShape.creating && !this.readonly) {\r\n          // 创建中\r\n          if ([Shape.Polygon, Shape.Line].includes(this.activeShape.type)) {\r\n            const [x, y] =\r\n              this.activeShape.coor[this.activeShape.coor.length - 1];\r\n            if (x !== offsetX && y !== offsetY) {\r\n              const nx = Math.round(offsetX - this.originX / this.scale);\r\n              const ny = Math.round(offsetY - this.originY / this.scale);\r\n              this.activeShape.coor.push([nx, ny]);\r\n            }\r\n          }\r\n        } else if (\r\n          this.createType !== Shape.None &&\r\n          !this.readonly &&\r\n          !this.isCtrlKey\r\n        ) {\r\n          // 开始创建\r\n          let newShape;\r\n          const nx = Math.round(offsetX - this.originX / this.scale);\r\n          const ny = Math.round(offsetY - this.originY / this.scale);\r\n          const curPoint: Point = [nx, ny];\r\n          switch (this.createType) {\r\n            case Shape.Rect:\r\n              newShape = new Rect(\r\n                { coor: [curPoint, curPoint] },\r\n                this.dataset.length\r\n              );\r\n              newShape.creating = true;\r\n              break;\r\n            case Shape.Polygon:\r\n              newShape = new Polygon({ coor: [curPoint] }, this.dataset.length);\r\n              newShape.creating = true;\r\n              break;\r\n            case Shape.Dot:\r\n              newShape = new Dot({ coor: curPoint }, this.dataset.length);\r\n              this.emit(\"add\", newShape);\r\n              break;\r\n            case Shape.Line:\r\n              newShape = new Line({ coor: [curPoint] }, this.dataset.length);\r\n              newShape.creating = true;\r\n              break;\r\n            case Shape.Circle:\r\n              newShape = new Circle({ coor: curPoint }, this.dataset.length);\r\n              newShape.creating = true;\r\n              break;\r\n            case Shape.Grid:\r\n              newShape = new Grid(\r\n                { coor: [curPoint, curPoint] },\r\n                this.dataset.length\r\n              );\r\n              newShape.creating = true;\r\n              break;\r\n            case Shape.Brush:\r\n              newShape = new Brush({ coor: [curPoint] }, this.dataset.length);\r\n              newShape.creating = true;\r\n              newShape.lineWidth = this.brushlineWidth;\r\n              newShape.strokeStyle = this.brushstrokeStyle;\r\n              this.ispainting = true;\r\n              if (this.isEraser) {\r\n                newShape.iseraser = true;\r\n                // this.ctx.save();\r\n                // this.ctx.globalCompositeOperation = 'destination-out';\r\n                // this.ctx.beginPath();\r\n                // this.ctx.arc(this.mouse[0], this.mouse[1], this.brushlineWidth / 2, 0, Math.PI * 2);\r\n                // this.ctx.fill();\r\n                // this.ctx.restore();\r\n                // this.lastX = this.mouse[0];\r\n                // this.lastY = this.mouse[1];\r\n              }\r\n              break;\r\n            case Shape.Pencil:\r\n              newShape = new Pencil({ coor: [curPoint] }, this.dataset.length);\r\n              newShape.creating = true;\r\n              newShape.lineWidth = this.pencillineWidth;\r\n              newShape.strokeStyle = this.pencilstrokeStyle;\r\n              this.ispainting = true;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.dataset.forEach((sp) => {\r\n            sp.active = false;\r\n          });\r\n          newShape.active = true;\r\n          this.dataset.push(newShape);\r\n        } else {\r\n          // 是否点击到形状\r\n          const [hitShapeIndex, hitShape] = this.hitOnShape(this.mouse);\r\n          if (hitShapeIndex > -1 && !hitShape.locking && !this.readonly) {\r\n            if (\r\n              hitShape.type === Shape.Dot &&\r\n              \"color\" in hitShape &&\r\n              hitShape.color !== \"\"\r\n            ) {\r\n              return; // 智能标注生成的点不可被选中\r\n            }\r\n            if (hitShape.type === Shape.Brush) {\r\n              if (\"iseraser\" in hitShape && !hitShape.iseraser) {\r\n                this.dataset.forEach(\r\n                  (item, i) => (item.active = i === hitShapeIndex)\r\n                );\r\n                if (this.activeShape.boundingRect.length === 0) {\r\n                  this.activeShape.boundingRect = this.removeDuplicatePoints(\r\n                    hitShape.coor,\r\n                    true,\r\n                    false\r\n                  ).resultRect;\r\n                }\r\n                this.emit(\"select\", hitShape);\r\n              }\r\n              return; // 刷子、橡皮檫和钢笔轨迹不可被拖拽\r\n            }\r\n            if (hitShape.type === Shape.Pencil) {\r\n              this.dataset.forEach(\r\n                (item, i) => (item.active = i === hitShapeIndex)\r\n              );\r\n              // if (this.activeShape.boundingRect.length === 0) {\r\n              //   this.activeShape.boundingRect = this.removeDuplicatePoints(\r\n              //     hitShape.coor,\r\n              //     true,\r\n              //     false\r\n              //   ).resultRect;\r\n              // }\r\n              this.emit(\"select\", hitShape);\r\n              this.update();\r\n              return; // 刷子、橡皮檫和钢笔轨迹不可被拖拽\r\n            }\r\n            // if(hitShape.type === Shape.Mask){\r\n            //     hitShape.active = true;\r\n            //     this.highlightMask(hitShapeIndex);\r\n            //     return; // 刷子、橡皮檫和钢笔轨迹不可被拖拽\r\n            // }\r\n            hitShape.dragging = true;\r\n            this.dataset.forEach(\r\n              (item, i) => (item.active = i === hitShapeIndex)\r\n            );\r\n            this.dataset.splice(hitShapeIndex, 1, hitShape);\r\n            // this.dataset.push(hitShape);\r\n            if (!this.readonly) {\r\n              this.remmber = [];\r\n              if ([Shape.Dot, Shape.Circle].includes(hitShape.type)) {\r\n                const [x, y] = hitShape.coor;\r\n                this.remmber = [[offsetX - x, offsetY - y]];\r\n              } else {\r\n                hitShape.coor.forEach((pt: any) => {\r\n                  this.remmber.push([offsetX - pt[0], offsetY - pt[1]]);\r\n                });\r\n              }\r\n            }\r\n            this.emit(\"select\", hitShape);\r\n          } else {\r\n            this.activeShape.active = false;\r\n            this.dataset.sort((a, b) => a.index - b.index);\r\n            this.emit(\"select\", null);\r\n          }\r\n        }\r\n        this.update();\r\n      }\r\n      // else {\r\n      //   this.activeShape.active = false;\r\n      //   this.dataset.sort((a, b) => a.index - b.index);\r\n      //   this.emit(\"select\", null);\r\n      //   this.update();\r\n      // }\r\n    } else if (\r\n      (!this.isMobile && (e as MouseEvent).buttons === 2) ||\r\n      (this.isMobile &&\r\n        (e as TouchEvent).touches.length === 3 &&\r\n        !this.readonly)\r\n    ) {\r\n      // 鼠标右键\r\n      if ([Shape.Grid].includes(this.activeShape.type) && this.gridMenuEnable) {\r\n        const rowCol = prompt(\r\n          \"x 行 y 列 x,y\",\r\n          [this.activeShape.row, this.activeShape.col].join(\",\")\r\n        );\r\n        if (typeof rowCol === \"string\") {\r\n          const [row, col] = rowCol.split(\",\");\r\n          if (/^[1-9]\\d*$/.test(row) && /^[1-9]\\d*$/.test(col)) {\r\n            this.activeShape.row = Number(row);\r\n            this.activeShape.col = Number(col);\r\n            this.update();\r\n          }\r\n        }\r\n      }\r\n      this.emit(\"contextmenu\", e);\r\n    }\r\n  }\r\n\r\n  private handleMouseMove(e: MouseEvent | TouchEvent) {\r\n    e.stopPropagation();\r\n    this.evt = e;\r\n    if (this.lock) return;\r\n    const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e);\r\n    const offsetX = Math.round(mouseX / this.scale);\r\n    const offsetY = Math.round(mouseY / this.scale);\r\n    this.mouse =\r\n      this.isMobile && (e as TouchEvent).touches.length === 2\r\n        ? [mouseCX, mouseCY]\r\n        : [mouseX, mouseY];\r\n    if (\r\n      ((!this.isMobile && (e as MouseEvent).buttons === 1) ||\r\n        (this.isMobile && (e as TouchEvent).touches.length === 1)) &&\r\n      this.activeShape.type\r\n    ) {\r\n      if (\r\n        this.ctrlIndex > -1 &&\r\n        this.remmber.length &&\r\n        (this.isInBackground(e) || this.activeShape.type === Shape.Circle)\r\n      ) {\r\n        const [[x, y]] = this.remmber;\r\n        // resize矩形\r\n        if ([Shape.Rect, Shape.Grid].includes(this.activeShape.type)) {\r\n          const [[x0, y0], [x1, y1]] = this.activeShape.coor;\r\n          let coor: Point[] = [];\r\n          switch (this.ctrlIndex) {\r\n            case 0:\r\n              coor = [\r\n                [offsetX - x, offsetY - y],\r\n                [x1, y1]\r\n              ];\r\n              break;\r\n            case 1:\r\n              coor = [\r\n                [x0, offsetY - y],\r\n                [x1, y1]\r\n              ];\r\n              break;\r\n            case 2:\r\n              coor = [\r\n                [x0, offsetY - y],\r\n                [offsetX - x, y1]\r\n              ];\r\n              break;\r\n            case 3:\r\n              coor = [\r\n                [x0, y0],\r\n                [offsetX - x, y1]\r\n              ];\r\n              break;\r\n            case 4:\r\n              coor = [\r\n                [x0, y0],\r\n                [offsetX - x, offsetY - y]\r\n              ];\r\n              break;\r\n            case 5:\r\n              coor = [\r\n                [x0, y0],\r\n                [x1, offsetY - y]\r\n              ];\r\n              break;\r\n            case 6:\r\n              coor = [\r\n                [offsetX - x, y0],\r\n                [x1, offsetY - y]\r\n              ];\r\n              break;\r\n            case 7:\r\n              coor = [\r\n                [offsetX - x, y0],\r\n                [x1, y1]\r\n              ];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          let [[a0, b0], [a1, b1]] = coor;\r\n          if (\r\n            a0 < 0 ||\r\n            a1 < 0 ||\r\n            b0 < 0 ||\r\n            b1 < 0 ||\r\n            a1 > this.IMAGE_ORIGIN_WIDTH ||\r\n            b1 > this.IMAGE_ORIGIN_HEIGHT\r\n          ) {\r\n            // 偶然触发 超出边界处理\r\n            a0 < 0 && (a0 = 0);\r\n            a1 < 0 && (a1 = 0);\r\n            b0 < 0 && (b0 = 0);\r\n            b1 < 0 && (b1 = 0);\r\n            if (a1 > this.IMAGE_ORIGIN_WIDTH) {\r\n              a1 = this.IMAGE_ORIGIN_WIDTH;\r\n            }\r\n            if (b1 > this.IMAGE_ORIGIN_HEIGHT) {\r\n              b1 = this.IMAGE_ORIGIN_HEIGHT;\r\n            }\r\n          }\r\n\r\n          if (a1 - a0 >= this.MIN_WIDTH && b1 - b0 >= this.MIN_HEIGHT) {\r\n            this.activeShape.coor = [\r\n              [a0, b0],\r\n              [a1, b1]\r\n            ];\r\n          } else {\r\n            this.emit(\r\n              \"warn\",\r\n              `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than${this.MIN_HEIGHT}。`\r\n            );\r\n          }\r\n        } else if (\r\n          [Shape.Polygon, Shape.Line].includes(this.activeShape.type)\r\n        ) {\r\n          const nx = Math.round(offsetX - this.originX / this.scale);\r\n          const ny = Math.round(offsetY - this.originY / this.scale);\r\n          const newPoint = [nx, ny];\r\n          this.activeShape.coor.splice(this.ctrlIndex, 1, newPoint); // 修改点坐标\r\n        } else if (this.activeShape.type === Shape.Circle) {\r\n          const nx = Math.round(offsetX - this.originX / this.scale);\r\n          const newRadius = nx - this.activeShape.coor[0];\r\n          if (newRadius >= this.MIN_RADIUS) this.activeShape.radius = newRadius;\r\n        }\r\n      } else if (this.activeShape.dragging && !this.readonly) {\r\n        // 拖拽\r\n        let coor = [];\r\n        let noLimit = true;\r\n        const w = this.IMAGE_ORIGIN_WIDTH || this.WIDTH;\r\n        const h = this.IMAGE_ORIGIN_HEIGHT || this.HEIGHT;\r\n        if ([Shape.Dot, Shape.Circle].includes(this.activeShape.type)) {\r\n          const [t1, t2] = this.remmber[0];\r\n          const x = offsetX - t1;\r\n          const y = offsetY - t2;\r\n          if (x < 0 || x > w || y < 0 || y > h) noLimit = false;\r\n          coor = [x, y];\r\n        } else {\r\n          for (let i = 0; i < this.activeShape.coor.length; i++) {\r\n            const tar = this.remmber[i];\r\n            const x = offsetX - tar[0];\r\n            const y = offsetY - tar[1];\r\n            if (x < 0 || x > w || y < 0 || y > h) noLimit = false;\r\n            coor.push([x, y]);\r\n          }\r\n        }\r\n        if (noLimit) this.activeShape.coor = coor;\r\n      } else if (this.activeShape.creating && this.isInBackground(e)) {\r\n        const x = Math.round(offsetX - this.originX / this.scale);\r\n        const y = Math.round(offsetY - this.originY / this.scale);\r\n        // 创建矩形\r\n        if ([Shape.Rect, Shape.Grid].includes(this.activeShape.type)) {\r\n          this.activeShape.coor.splice(1, 1, [x, y]);\r\n        } else if (this.activeShape.type === Shape.Circle) {\r\n          const [x0, y0] = this.activeShape.coor;\r\n          const r = Math.sqrt((x0 - x) ** 2 + (y0 - y) ** 2);\r\n          this.activeShape.radius = r;\r\n        } else if (this.ispainting && this.createType === Shape.Brush) {\r\n          const nx = Math.round(offsetX - this.originX / this.scale);\r\n          const ny = Math.round(offsetY - this.originY / this.scale);\r\n          const newPoint: Point = [nx, ny];\r\n          this.activeShape.coor.push(newPoint);\r\n        } else if (this.ispainting && this.createType === Shape.Pencil) {\r\n          const nx = Math.round(offsetX - this.originX / this.scale);\r\n          const ny = Math.round(offsetY - this.originY / this.scale);\r\n          const newPoint: Point = [nx, ny];\r\n          this.activeShape.coor.push(newPoint);\r\n        }\r\n      }\r\n      this.update();\r\n    } else if (\r\n      [Shape.Polygon, Shape.Line, Shape.Brush, Shape.Pencil].includes(\r\n        this.activeShape.type\r\n      ) &&\r\n      this.activeShape.creating\r\n    ) {\r\n      // 多边形添加点\r\n      this.update();\r\n    } else if (\r\n      (!this.isMobile &&\r\n        (e as MouseEvent).buttons === 2 &&\r\n        (e as MouseEvent).which === 3) ||\r\n      (this.isMobile &&\r\n        (e as TouchEvent).touches.length === 1 &&\r\n        !this.isTouch2)\r\n    ) {\r\n      // 拖动背景\r\n      this.originX = Math.round(mouseX - this.remmberOrigin[0]);\r\n      this.originY = Math.round(mouseY - this.remmberOrigin[1]);\r\n      this.emit(\"dragimg\");\r\n      this.update();\r\n    } else if (this.isMobile && (e as TouchEvent).touches.length === 2) {\r\n      this.isTouch2 = true;\r\n      const touch0 = (e as TouchEvent).touches[0];\r\n      const touch1 = (e as TouchEvent).touches[1];\r\n      const cur = this.scaleTouchStore;\r\n      this.scaleTouchStore = Math.abs(\r\n        (touch1.clientX - touch0.clientX) * (touch1.clientY - touch0.clientY)\r\n      );\r\n      this.setScale(this.scaleTouchStore > cur, true);\r\n    }\r\n  }\r\n\r\n  private handleMouseUp(e: MouseEvent | TouchEvent) {\r\n    console.log(\"handleMouseUp\");\r\n    e.stopPropagation();\r\n    this.evt = e;\r\n    if (this.lock) return;\r\n    if (this.isMobile) {\r\n      if ((e as TouchEvent).touches.length === 0) {\r\n        this.isTouch2 = false;\r\n      }\r\n      if (Date.now() - this.dblTouchStore < this.dblTouch) {\r\n        this.handleDblclick(e);\r\n        return;\r\n      }\r\n      this.dblTouchStore = Date.now();\r\n    }\r\n    this.remmber = [];\r\n    if (this.activeShape.type !== Shape.None && !this.isCtrlKey) {\r\n      // if (this.activeShape.dragging) {\r\n      //   this.activeShape.truncated = 0;\r\n      //   for (let i = 0; i < this.dataset.length; i++) {\r\n      //     if (\r\n      //       this.dataset[i].type === Shape.Rect &&\r\n      //       this.dataset[i].index !== this.activeShape.index\r\n      //     ) {\r\n      //       if (\r\n      //         this.dataset[i].coor[1][0] > this.activeShape.coor[0][0] &&\r\n      //         this.dataset[i].coor[0][0] < this.activeShape.coor[1][0] &&\r\n      //         this.dataset[i].coor[1][1] > this.activeShape.coor[0][1] &&\r\n      //         this.dataset[i].coor[0][1] < this.activeShape.coor[1][1]\r\n      //       ) {\r\n      //         this.activeShape.truncated = 1;\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // }\r\n      this.activeShape.dragging = false;\r\n      if (this.activeShape.creating) {\r\n        if ([Shape.Rect, Shape.Grid].includes(this.activeShape.type)) {\r\n          const [[x0, y0], [x1, y1]] = this.activeShape.coor;\r\n          if (\r\n            Math.abs(x0 - x1) < this.MIN_WIDTH ||\r\n            Math.abs(y0 - y1) < this.MIN_HEIGHT\r\n          ) {\r\n            this.dataset.pop();\r\n            this.emit(\r\n              \"warn\",\r\n              `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than ${this.MIN_HEIGHT}`\r\n            );\r\n          } else {\r\n            this.activeShape.coor = [\r\n              [Math.min(x0, x1), Math.min(y0, y1)],\r\n              [Math.max(x0, x1), Math.max(y0, y1)]\r\n            ];\r\n            this.activeShape.creating = false;\r\n            this.activeShape.truncated = 0;\r\n            // 判断是否有重叠\r\n            // for (let i = 0; i < this.dataset.length; i++) {\r\n            //   if (\r\n            //     this.dataset[i].type === Shape.Rect &&\r\n            //     this.dataset[i].index !== this.activeShape.index\r\n            //   ) {\r\n            //     if (\r\n            //       this.dataset[i].coor[1][0] > this.activeShape.coor[0][0] &&\r\n            //       this.dataset[i].coor[0][0] < this.activeShape.coor[1][0] &&\r\n            //       this.dataset[i].coor[1][1] > this.activeShape.coor[0][1] &&\r\n            //       this.dataset[i].coor[0][1] < this.activeShape.coor[1][1]\r\n            //     ) {\r\n            //       this.activeShape.truncated = 1;\r\n            //     }\r\n            //   }\r\n            // }\r\n            this.emit(\"add\", this.activeShape);\r\n          }\r\n        } else if (this.activeShape.type === Shape.Circle) {\r\n          if (this.activeShape.radius < this.MIN_RADIUS) {\r\n            this.dataset.pop();\r\n            this.emit(\"warn\", `Radius cannot be less than ${this.MIN_WIDTH}`);\r\n          } else {\r\n            this.activeShape.creating = false;\r\n            this.emit(\"add\", this.activeShape);\r\n          }\r\n        } else if (this.createType === Shape.Brush) {\r\n          if (this.activeShape.coor.length < this.MIN_POINTNUM) {\r\n            this.dataset.pop();\r\n            this.emit(\r\n              \"warn\",\r\n              `Path points cannot be less than ${this.MIN_POINTNUM}`\r\n            );\r\n          } else {\r\n            this.ispainting = false;\r\n            this.activeShape.creating = false;\r\n            // 去除重复点\r\n            const { resultCoor, resultRect } = this.removeDuplicatePoints(\r\n              this.activeShape.coor,\r\n              true\r\n            );\r\n            this.activeShape.coor = resultCoor;\r\n            // 使用rle编码\r\n            // const [x, y, width, height] = resultRect;\r\n            // console.log(\"rel:\", this.relEncodeBinary(x, y, width, height));\r\n            this.activeShape.boundingRect = resultRect;\r\n            this.emit(\"add\", this.activeShape);\r\n          }\r\n        } else if (this.createType === Shape.Pencil) {\r\n          if (this.activeShape.coor.length < this.MIN_POINTNUM) {\r\n            this.dataset.pop();\r\n            this.emit(\r\n              \"warn\",\r\n              `Path points cannot be less than ${this.MIN_POINTNUM}`\r\n            );\r\n          } else {\r\n            this.ispainting = false;\r\n            this.activeShape.creating = false;\r\n            for (let i = this.dataset.length - 1; i >= 0; i--) {\r\n              const item = this.dataset[i];\r\n              if (\r\n                item.type === Shape.Pencil &&\r\n                item.uuid !== this.activeShape.uuid\r\n              ) {\r\n                const pencilItem = item as Pencil;\r\n                const closedPoly1 = this.closePolygon(pencilItem.coor);\r\n                let closedPoly2 = this.closePolygon(this.activeShape.coor);\r\n                const intersectionResult = martinez.intersection(\r\n                  closedPoly1,\r\n                  closedPoly2\r\n                );\r\n                if (intersectionResult && intersectionResult.length > 0) {\r\n                  // 颜色相同\r\n                  if (item.strokeStyle === this.activeShape.strokeStyle) {\r\n                    const unionResult = martinez.union(\r\n                      closedPoly1,\r\n                      closedPoly2\r\n                    );\r\n                    if (unionResult?.[0]?.[0]) {\r\n                      this.activeShape.coor = unionResult[0][0];\r\n                      closedPoly2 = this.closePolygon(this.activeShape.coor);\r\n                    }\r\n                    // 从数组中删除当前 item\r\n                    this.dataset.splice(i, 1);\r\n                  } else {\r\n                    // 颜色不同\r\n                    const bMinusA = martinez.diff(closedPoly2, closedPoly1); // activeShape - pencilItem\r\n                    if (!bMinusA || bMinusA.length === 0) {\r\n                      // // activeShape 完全被 pencilItem 包含：将 activeShape 外轮廓添加为 pencilItem 的内孔\r\n                      // if (!pencilItem.innerCoor) pencilItem.innerCoor = [];\r\n                      // pencilItem.innerCoor.push(\r\n                      //   deepClone(this.activeShape.coor)\r\n                      // );\r\n                      // // activeShape 保留，pencilItem 添加内孔\r\n                      continue;\r\n                    } else {\r\n                      // activeShape 不包含于 pencilItem，执行 pencilItem - activeShape\r\n                      const AMinusB = martinez.diff(closedPoly1, closedPoly2);\r\n                      if (!AMinusB || AMinusB.length === 0) {\r\n                        this.dataset.splice(i, 1); // pencilItem 完全被 activeShape 吃掉\r\n                      } else {\r\n                        pencilItem.coor = AMinusB[0][0]; // pencilItem 保留非交集部分\r\n                        pencilItem.coor[pencilItem.coor.length - 1] = [-1, -1]; // 添加结束点\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.activeShape.coor.push([-1, -1]);\r\n            // 去除重复点\r\n            const { resultCoor, resultRect } = this.removeDuplicatePoints(\r\n              this.activeShape.coor,\r\n              false\r\n            );\r\n            this.activeShape.coor = resultCoor;\r\n            // this.activeShape.boundingRect = resultRect;\r\n            this.emit(\"add\", this.activeShape);\r\n          }\r\n        } else if (this.createType === Shape.Line) {\r\n          if (this.activeShape.coor.length === this.maxLinePointCount) {\r\n            const canLine =\r\n              this.activeShape.type === Shape.Line &&\r\n              this.activeShape.coor.length > 1;\r\n            if (canLine) {\r\n              this.emit(\"add\", this.activeShape);\r\n              this.activeShape.creating = false;\r\n            }\r\n          }\r\n        }\r\n        this.update();\r\n      }\r\n      const condition = [\r\n        \"coor\",\r\n        \"label\",\r\n        \"labelUp\",\r\n        \"lineWidth\",\r\n        \"strokeStyle\",\r\n        \"textFillStyle\",\r\n        \"uuid\",\r\n        \"remark\",\r\n        \"length\"\r\n      ];\r\n      // console.log(deepEqual(this.olddataset, this.dataset, condition));\r\n      // console.log(\"this.olddataset\", this.olddataset);\r\n      // console.log(\"this.dataset\", this.dataset);\r\n      if (!deepEqual(this.olddataset, this.dataset, condition)) {\r\n        this.manageDoneList(deepClone(this.dataset));\r\n        console.log(\"this.doneList\", this.doneList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleDblclick(e: MouseEvent | TouchEvent) {\r\n    e.stopPropagation();\r\n    this.evt = e;\r\n    if (this.lock) return;\r\n    if ([Shape.Polygon, Shape.Line].includes(this.activeShape.type)) {\r\n      const canPolygon =\r\n        this.activeShape.type === Shape.Polygon &&\r\n        this.activeShape.coor.length > 2;\r\n      const canLine =\r\n        this.activeShape.type === Shape.Line &&\r\n        this.activeShape.coor.length > 1;\r\n      if (canPolygon || canLine) {\r\n        this.emit(\"add\", this.activeShape);\r\n        this.activeShape.creating = false;\r\n        this.update();\r\n      }\r\n    } else if ([Shape.Grid].includes(this.activeShape.type)) {\r\n      // 双击切换网格分区选中状态\r\n      if (this.activeShape.active) {\r\n        this.activeShape.gridRects.forEach(\r\n          (rect: { coor: Point[]; index: number }) => {\r\n            if (this.isPointInRect(this.mouse, rect.coor)) {\r\n              const thisIndex = this.activeShape.selected.findIndex(\r\n                (x: number) => rect.index === x\r\n              );\r\n              if (thisIndex > -1) {\r\n                this.activeShape.selected.splice(thisIndex, 1);\r\n              } else {\r\n                this.activeShape.selected.push(rect.index);\r\n              }\r\n            }\r\n          }\r\n        );\r\n        this.update();\r\n      }\r\n    }\r\n  }\r\n  private handleKeydown(e: KeyboardEvent) {\r\n    if (e.code === this.ctrlCode) {\r\n      this.isCtrlKey = true;\r\n    }\r\n  }\r\n\r\n  private handleKeyup(e: KeyboardEvent) {\r\n    if (e.code === this.ctrlCode) {\r\n      this.isCtrlKey = false;\r\n    }\r\n    this.evt = e;\r\n    // 检查是否按下了 Ctrl + V\r\n    if (this.isCtrlKey && e.key === \"v\" && !this.readonly) {\r\n      this.copyByIndex(this.activeShape.index);\r\n      return; // 直接返回，防止执行后续代码\r\n    }\r\n    if (this.lock || document.activeElement !== document.body || this.readonly)\r\n      return;\r\n    if (this.activeShape.type) {\r\n      if (\r\n        [Shape.Polygon, Shape.Line].includes(this.activeShape.type) &&\r\n        e.key === \"Escape\"\r\n      ) {\r\n        if (this.activeShape.coor.length > 1 && this.activeShape.creating) {\r\n          this.activeShape.coor.pop();\r\n        } else {\r\n          this.deleteByIndex(this.activeShape.index);\r\n        }\r\n        this.update();\r\n      } else if (e.key === \"Backspace\" || e.key === \"Delete\") {\r\n        this.deleteByIndex(this.activeShape.index);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** 初始化配置 */\r\n  initSetting() {\r\n    const dpr = window.devicePixelRatio || 1;\r\n    this.canvas.style.userSelect = \"none\";\r\n    this.ctx =\r\n      this.ctx ||\r\n      this.canvas.getContext(\"2d\", {\r\n        alpha: this.alpha,\r\n        willReadFrequently: true\r\n      });\r\n    this.WIDTH = Math.round(this.canvas.clientWidth);\r\n    this.HEIGHT = Math.round(this.canvas.clientHeight);\r\n    this.canvas.width = this.WIDTH * dpr;\r\n    this.canvas.height = this.HEIGHT * dpr;\r\n    this.canvas.style.width = this.WIDTH + \"px\";\r\n    this.canvas.style.height = this.HEIGHT + \"px\";\r\n    this.offScreen.width = this.WIDTH;\r\n    this.offScreen.height = this.HEIGHT;\r\n    this.offScreenCtx =\r\n      this.offScreenCtx ||\r\n      this.offScreen.getContext(\"2d\", { willReadFrequently: true });\r\n    this.ctx.scale(dpr, dpr);\r\n  }\r\n\r\n  /** 初始化事件 */\r\n  initEvents() {\r\n    if (!this.canvas) return;\r\n    this.image.addEventListener(\"load\", this.handleLoad);\r\n    this.canvas.addEventListener(\"touchstart\", this.handleMouseDown);\r\n    this.canvas.addEventListener(\"touchmove\", this.handleMouseMove);\r\n    this.canvas.addEventListener(\"touchend\", this.handleMouseUp);\r\n    this.canvas.addEventListener(\"contextmenu\", this.handleContextmenu);\r\n    this.canvas.addEventListener(\"mousewheel\", this.handleMousewheel); // 火狐浏览器不支持mousewheel事件\r\n    this.canvas.removeEventListener(\"wheel\", this.handleMousewheel); // 解决火狐浏览器不支持mousewheel事件的问题\r\n    this.canvas.addEventListener(\"mousedown\", this.handleMouseDown);\r\n    this.canvas.addEventListener(\"mousemove\", this.handleMouseMove);\r\n    this.canvas.addEventListener(\"mouseup\", this.handleMouseUp);\r\n    this.canvas.addEventListener(\"dblclick\", this.handleDblclick);\r\n    document.body.addEventListener(\"keydown\", this.handleKeydown, true);\r\n    document.body.addEventListener(\"keyup\", this.handleKeyup, true);\r\n  }\r\n\r\n  getscaledPoint(e: MouseEvent): Point {\r\n    const { mouseX, mouseY } = this.mergeEvent(e);\r\n    const offsetX = Math.round(mouseX / this.scale);\r\n    const offsetY = Math.round(mouseY / this.scale);\r\n    const nx = Math.round(offsetX - this.originX / this.scale);\r\n    const ny = Math.round(offsetY - this.originY / this.scale);\r\n    return [nx, ny];\r\n  }\r\n\r\n  closePolygon = (poly: any[]) => {\r\n    const closedPoly = poly.filter(\r\n      (point) => point[0] !== -1 || point[1] !== -1\r\n    ); // 去掉 (-1, -1)\r\n    if (closedPoly.length > 0) {\r\n      closedPoly.push(closedPoly[0]); // 添加首点以闭合路径\r\n    }\r\n    return [closedPoly]; // 返回二维数组，符合 martinez 格式\r\n  };\r\n\r\n  /**\r\n   * 添加/切换图片\r\n   * @param url 图片链接\r\n   */\r\n  setImage(url: string, alpha: number = 1) {\r\n    // 解决问题：Failed to execute 'toDataURL' on 'HTMLCanvasElement': Tainted canvases may not be exported.\r\n    this.image.crossOrigin = \"Anonymous\";\r\n    this.image.src = url;\r\n    this.imagealpha = alpha;\r\n    this.scaleStep = 0;\r\n    this.textscaleStep = 0;\r\n  }\r\n\r\n  // 异步处理 Mask 形状的创建\r\n  async handleMaskShape(\r\n    item: AllShape,\r\n    index: number\r\n  ): Promise<AllShape | null> {\r\n    let tempshape = new Mask(item, index);\r\n    const maskBase64 = tempshape.maskBase64;\r\n    const maskImage = new Image();\r\n    maskImage.crossOrigin = \"Anonymous\";\r\n    maskImage.src = `data:image/png;base64,${maskBase64}`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      maskImage.onload = () => {\r\n        const pixels: number[] = [];\r\n        const pixelData = this.getImagedataFromImageClass(maskImage, \"magic\");\r\n\r\n        if (pixelData) {\r\n          // 遍历像素，筛选符合条件的像素点\r\n          for (let i = 0; i < pixelData.length; i += 4) {\r\n            if (\r\n              pixelData[i] === 255 &&\r\n              pixelData[i + 1] === 255 &&\r\n              pixelData[i + 2] === 255\r\n            ) {\r\n              pixels.push(i);\r\n            }\r\n          }\r\n\r\n          tempshape.pixels = pixels;\r\n          tempshape.height = this.IMAGE_HEIGHT;\r\n          tempshape.weight = this.IMAGE_WIDTH;\r\n          tempshape.fillStyle = item.fillStyle;\r\n          tempshape.strokeStyle = item.strokeStyle;\r\n\r\n          // 根据 'maskToPolygon' 判断是否转换为 Polygon 形状\r\n          if (\r\n            \"maskToPolygon\" in item &&\r\n            item.maskToPolygon &&\r\n            tempshape.maskType === \"click\"\r\n          ) {\r\n            this.activeCanvasData = this.putDataOnCanvas(\r\n              this.canvas,\r\n              pixels,\r\n              tempshape.fillStyle,\r\n              false\r\n            );\r\n            const polygonShape = new Polygon(\r\n              {\r\n                coor: this.getContourPointsOfColoredRegion(\r\n                  this.activeCanvasData,\r\n                  0.5\r\n                )\r\n              },\r\n              index\r\n            );\r\n            polygonShape.tagId = item.tagId;\r\n            polygonShape.label = item.label;\r\n            polygonShape.strokeStyle = item.strokeStyle;\r\n            this.activePolygon = polygonShape.uuid;\r\n            resolve(polygonShape);\r\n          } else {\r\n            tempshape.canvasData = this.putDataOnCanvas(\r\n              this.canvas,\r\n              pixels,\r\n              tempshape.fillStyle,\r\n              true\r\n            );\r\n            tempshape.tagId = item.tagId;\r\n            tempshape.label = item.label;\r\n            resolve(tempshape);\r\n          }\r\n\r\n          // 绘制样本点\r\n          this.magicPoints = tempshape.magicPoints;\r\n        } else {\r\n          console.error(\"Failed to get pixel data from mask image\");\r\n          reject(null); // 如果加载像素数据失败，返回 null\r\n        }\r\n      };\r\n\r\n      maskImage.onerror = (err) => {\r\n        console.error(\"Error loading mask image\", err);\r\n        reject(null); // 如果加载图像失败，返回 null\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置数据\r\n   * @param data Array\r\n   * @param needCreate Boolean 是否需要创建(当传options时需要，当撤销重做操作传dataset时不需要)\r\n   */\r\n  setData(\r\n    data: AllShape[],\r\n    needCreate: boolean = true,\r\n    toMask: boolean = false,\r\n    initSize: boolean = false\r\n  ): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        if (needCreate) {\r\n          const initdata: AllShape[] = [];\r\n          const itemIndexMap = new Map<AllShape, number>();\r\n\r\n          data.forEach((item, index) => {\r\n            itemIndexMap.set(item, index);\r\n          });\r\n\r\n          for (const item of data) {\r\n            if (Object.prototype.toString.call(item).includes(\"Object\")) {\r\n              let shape;\r\n              const index = itemIndexMap.get(item)!;\r\n\r\n              switch (item.type) {\r\n                case Shape.Rect:\r\n                  shape = new Rect(item, index);\r\n                  break;\r\n                case Shape.Polygon:\r\n                  shape = new Polygon(item, index);\r\n                  break;\r\n                case Shape.Dot:\r\n                  shape = new Dot(item, index);\r\n                  break;\r\n                case Shape.Line:\r\n                  shape = new Line(item, index);\r\n                  break;\r\n                case Shape.Circle:\r\n                  shape = new Circle(item, index);\r\n                  break;\r\n                case Shape.Grid:\r\n                  shape = new Grid(item, index);\r\n                  break;\r\n                case Shape.Brush:\r\n                  shape = new Brush(item, index);\r\n                  break;\r\n                case Shape.BrushMask:\r\n                  shape = new BrushMask(item, index);\r\n                  break;\r\n                case Shape.Mask:\r\n                  shape = await this.handleMaskShape(item, index);\r\n                  break;\r\n                case Shape.Pencil:\r\n                  shape = new Pencil(item, index);\r\n                  break;\r\n                default:\r\n                  console.warn(\"Invalid shape\", item);\r\n                  break;\r\n              }\r\n\r\n              if (\r\n                [\r\n                  Shape.Rect,\r\n                  Shape.Polygon,\r\n                  Shape.Dot,\r\n                  Shape.Line,\r\n                  Shape.Circle,\r\n                  Shape.Grid,\r\n                  Shape.Brush,\r\n                  Shape.BrushMask,\r\n                  Shape.Mask,\r\n                  Shape.Pencil\r\n                ].includes(item.type)\r\n              ) {\r\n                initdata.push(shape);\r\n              }\r\n            } else {\r\n              console.warn(\"Shape must be an enumerable Object.\", item);\r\n            }\r\n          }\r\n\r\n          this.dataset = initdata;\r\n        } else {\r\n          this.dataset = data;\r\n        }\r\n\r\n        this.update(toMask, initSize);\r\n\r\n        if (this.doneList.length === 0 && this.dataset !== undefined) {\r\n          this.manageDoneList(deepClone(this.dataset));\r\n        }\r\n\r\n        resolve(); // ✅ 完成后 resolve promise\r\n      }, 0); // 使用 setTimeout 模拟 nextTick，防止阻塞主线程\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 判断是否在标注实例上\r\n   * @param mousePoint 点击位置\r\n   * @returns\r\n   */\r\n  hitOnShape(mousePoint: Point): [number, AllShape] {\r\n    let hitShapeIndex = -1;\r\n    let hitShape: AllShape;\r\n    for (let i = this.dataset.length - 1; i > -1; i--) {\r\n      const shape = this.dataset[i];\r\n      if (\r\n        this.isPointInBackground(mousePoint) &&\r\n        ((shape.type === Shape.Dot &&\r\n          this.isPointInCircle(\r\n            mousePoint,\r\n            shape.coor as Point,\r\n            this.ctrlRadius\r\n          )) ||\r\n          (shape.type === Shape.Circle &&\r\n            this.isPointInCircle(\r\n              mousePoint,\r\n              shape.coor as Point,\r\n              (shape as Circle).radius * this.scale\r\n            )) ||\r\n          (shape.type === Shape.Rect &&\r\n            this.isPointInRect(mousePoint, (shape as Rect).coor)) ||\r\n          (shape.type === Shape.Polygon &&\r\n            this.isPointInPolygon(mousePoint, (shape as Polygon).coor)) ||\r\n          (shape.type === Shape.Line &&\r\n            this.isPointInLine(mousePoint, (shape as Line).coor)) ||\r\n          (shape.type === Shape.Grid &&\r\n            this.isPointInRect(mousePoint, (shape as Grid).coor)) ||\r\n          (shape.type === Shape.Brush &&\r\n            this.isPointInLine(mousePoint, (shape as Brush).coor)) ||\r\n          (shape.type === Shape.Pencil &&\r\n            this.isPointInPolygon(mousePoint, (shape as Pencil).coor)) ||\r\n          (shape.type === Shape.Mask &&\r\n            this.isMouseInPixelsRegion(mousePoint, (shape as Mask).canvasData)))\r\n      ) {\r\n        if ((this.focusMode && !shape.active) || shape.hiddening) continue;\r\n        hitShapeIndex = i;\r\n        hitShape = shape;\r\n        break;\r\n      }\r\n    }\r\n    return [hitShapeIndex, hitShape];\r\n  }\r\n\r\n  /**\r\n   * 判断是否在标注实例顶点上\r\n   * @param mousePoint 点击位置\r\n   * @returns\r\n   */\r\n  hitOnShapeVertex(): string {\r\n    let mouseType: string;\r\n    const shape = this.activeShape;\r\n    const ctrls = this.activeShape.ctrlsData || [];\r\n    this.ctrlIndex = ctrls.findIndex((coor: Point) =>\r\n      this.isPointInCircle(this.mouse, coor, this.ctrlRadius)\r\n    );\r\n    if (this.ctrlIndex > -1 && !this.readonly && !shape.hiddening) {\r\n      if (shape.type === Shape.Rect) {\r\n        if (this.ctrlIndex === 0) {\r\n          mouseType = \"nw-resize\";\r\n        } else if (this.ctrlIndex === 1) {\r\n          mouseType = \"ns-resize\";\r\n        } else if (this.ctrlIndex === 2) {\r\n          mouseType = \"ne-resize\";\r\n        } else if (this.ctrlIndex === 3) {\r\n          mouseType = \"ew-resize\";\r\n        } else if (this.ctrlIndex === 4) {\r\n          mouseType = \"se-resize\";\r\n        } else if (this.ctrlIndex === 5) {\r\n          mouseType = \"ns-resize\";\r\n        } else if (this.ctrlIndex === 6) {\r\n          mouseType = \"sw-resize\";\r\n        } else {\r\n          mouseType = \"ew-resize\";\r\n        }\r\n      } else if (\r\n        shape.type === Shape.Brush ||\r\n        shape.type === Shape.Pencil ||\r\n        shape.type === Shape.Polygon ||\r\n        shape.type === Shape.Line ||\r\n        shape.type === Shape.Circle\r\n      ) {\r\n        mouseType = \"pointer\";\r\n      } else {\r\n        mouseType = \"move\";\r\n      }\r\n    } else {\r\n      mouseType = \"\";\r\n    }\r\n    return mouseType;\r\n  }\r\n\r\n  /**\r\n   * 判断鼠标是否在背景图内部\r\n   * @param e MouseEvent\r\n   * @returns 布尔值\r\n   */\r\n  isInBackground(e: MouseEvent | TouchEvent): boolean {\r\n    const { mouseX, mouseY } = this.mergeEvent(e);\r\n    return (\r\n      mouseX >= this.originX &&\r\n      mouseY >= this.originY &&\r\n      mouseX <= this.originX + this.IMAGE_ORIGIN_WIDTH * this.scale &&\r\n      mouseY <= this.originY + this.IMAGE_ORIGIN_HEIGHT * this.scale\r\n    );\r\n  }\r\n\r\n  /**point\r\n   * 判断点是否在背景图内部\r\n   * @param point Point\r\n   * @returns 布尔值\r\n   */\r\n  isPointInBackground(point: Point): boolean {\r\n    const pointX = point[0]; //???????????????\r\n    const pointY = point[1];\r\n    return (\r\n      pointX >= this.originX &&\r\n      pointY >= this.originY &&\r\n      pointX <= this.originX + this.IMAGE_ORIGIN_WIDTH * this.scale &&\r\n      pointY <= this.originY + this.IMAGE_ORIGIN_HEIGHT * this.scale\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 判断是否在矩形内\r\n   * @param point 坐标\r\n   * @param coor 区域坐标\r\n   * @returns 布尔值\r\n   */\r\n  isPointInRect(point: Point, coor: Point[]): boolean {\r\n    const [x, y] = point;\r\n    const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\r\n    return (\r\n      x0 + this.originX < x &&\r\n      x < x1 + this.originX &&\r\n      y0 + this.originY < y &&\r\n      y < y1 + this.originY\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 判断点是否在矩形的边上，并区分是在左右边还是上下边\r\n   * @param point 坐标\r\n   * @param coor 区域坐标\r\n   * @returns 字符串，表示对应的鼠标样式，或 'none' 表示不在边上\r\n   */\r\n  isPointOnRectEdge(point: Point, coor: Point[]): string {\r\n    const [x, y] = point;\r\n    const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\r\n    const onLeftEdge =\r\n      x === x0 + this.originX &&\r\n      y >= y0 + this.originY &&\r\n      y <= y1 + this.originY;\r\n    const onRightEdge =\r\n      x === x1 + this.originX &&\r\n      y >= y0 + this.originY &&\r\n      y <= y1 + this.originY;\r\n    const onTopEdge =\r\n      y === y0 + this.originY &&\r\n      x >= x0 + this.originX &&\r\n      x <= x1 + this.originX;\r\n    const onBottomEdge =\r\n      y === y1 + this.originY &&\r\n      x >= x0 + this.originX &&\r\n      x <= x1 + this.originX;\r\n    if (onLeftEdge || onRightEdge) return \"ew-resize\";\r\n    if (onTopEdge || onBottomEdge) return \"ns-resize\";\r\n    return \"none\";\r\n  }\r\n\r\n  /**\r\n   * 判断点是否在矩形的顶点上，并区分是在左上、左下、右上还是右下顶点\r\n   * @param point 坐标\r\n   * @param coor 区域坐标\r\n   * @returns 字符串，表示对应的鼠标样式，或 'none' 表示不在顶点上\r\n   */\r\n  isPointOnRectVertex(point: Point, coor: Point[]): string {\r\n    const [x, y] = point;\r\n    const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\r\n    const onLeftTopPoint = x === x0 + this.originX && y === y0 + this.originY;\r\n    const onRightBottomEdge =\r\n      x === x1 + this.originX && y === y1 + this.originY;\r\n    const onRightTopEdge = x === x1 + this.originX && y === y0 + this.originY;\r\n    const onLeftBottomEdge = x === x0 + this.originX && y === y1 + this.originY;\r\n    if (onLeftTopPoint) return \"nw-resize\";\r\n    if (onRightBottomEdge) return \"se-resize\";\r\n    if (onRightTopEdge) return \"ne-resize\";\r\n    if (onLeftBottomEdge) return \"sw-resize\";\r\n    return \"none\";\r\n  }\r\n\r\n  /**\r\n   * 判断是否在多边形内\r\n   * @param point 坐标\r\n   * @param coor 区域坐标\r\n   * @returns 布尔值\r\n   */\r\n  isPointInPolygon(point: Point, coor: Point[]): boolean {\r\n    this.offScreenCtx.save();\r\n    this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n    this.offScreenCtx.translate(this.originX, this.originY);\r\n    this.offScreenCtx.beginPath();\r\n    coor.forEach((pt, i) => {\r\n      const [x, y] = pt.map((a) => Math.round(a * this.scale));\r\n      if (i === 0) {\r\n        this.offScreenCtx.moveTo(x, y);\r\n      } else {\r\n        this.offScreenCtx.lineTo(x, y);\r\n      }\r\n    });\r\n    this.offScreenCtx.closePath();\r\n    this.offScreenCtx.fill();\r\n    const areaData = this.offScreenCtx.getImageData(\r\n      0,\r\n      0,\r\n      this.WIDTH,\r\n      this.HEIGHT\r\n    );\r\n    const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\r\n    this.offScreenCtx.restore();\r\n    return areaData.data[index + 3] !== 0;\r\n  }\r\n\r\n  /**\r\n   * 判断是否在多边形顶点上\r\n   * @param point 坐标\r\n   * @param coor 区域坐标\r\n   * @returns 布尔值\r\n   */\r\n  isPointOnPolygonVertex(point: Point, coor: Point[]): boolean {\r\n    // 遍历每个顶点，检查是否和目标点重合\r\n    return coor.some((pt) => {\r\n      const [x, y] = pt.map((a) => Math.round(a * this.scale));\r\n      return x === point[0] + this.originX && y === point[1] + this.originY;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 判断是否在圆内\r\n   * @param point 坐标\r\n   * @param center 圆心\r\n   * @param r 半径\r\n   * @param needScale 是否为圆形点击检测\r\n   * @returns 布尔值\r\n   */\r\n  isPointInCircle(point: Point, center: Point, r: number): boolean {\r\n    const [x, y] = point;\r\n    const [x0, y0] = center.map((a) => a * this.scale);\r\n    const distance = Math.sqrt(\r\n      (x0 + this.originX - x) ** 2 + (y0 + this.originY - y) ** 2\r\n    );\r\n    return distance <= r;\r\n  }\r\n\r\n  /**\r\n   * 判断是否在圆的顶点上\r\n   * @param point 坐标\r\n   * @param center 圆心\r\n   * @param r 半径\r\n   * @returns 布尔值\r\n   */\r\n  isPointOnCircleVertex(point: Point, center: Point, r: number): boolean {\r\n    const [x, y] = point;\r\n    const [x0, y0] = center.map((a) => a * this.scale);\r\n    return x === x0 + this.originX + r && y === y0 + this.originY;\r\n  }\r\n\r\n  /**\r\n   * 判断是否在折线内\r\n   * @param point 坐标\r\n   * @param coor 区域坐标\r\n   * @returns 布尔值\r\n   */\r\n  isPointInLine(point: Point, coor: Point[]): boolean {\r\n    this.offScreenCtx.save();\r\n    this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n    this.offScreenCtx.translate(this.originX, this.originY);\r\n    this.offScreenCtx.lineWidth = this.lineWidth > 5 ? this.lineWidth : 5;\r\n    this.offScreenCtx.beginPath();\r\n    coor.forEach((pt, i) => {\r\n      const [x, y] = pt.map((a) => Math.round(a * this.scale));\r\n      if (i === 0) {\r\n        this.offScreenCtx.moveTo(x, y);\r\n      } else {\r\n        this.offScreenCtx.lineTo(x, y);\r\n      }\r\n    });\r\n    this.offScreenCtx.stroke();\r\n    const areaData = this.offScreenCtx.getImageData(\r\n      0,\r\n      0,\r\n      this.WIDTH,\r\n      this.HEIGHT\r\n    );\r\n    const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\r\n    this.offScreenCtx.restore();\r\n    return areaData.data[index + 3] !== 0;\r\n  }\r\n\r\n  /**\r\n   * 判断是否在折线内\r\n   * @param mousePoint 鼠标坐标\r\n   * @param pixels 像素点索引列表\r\n   * @returns 布尔值\r\n   */\r\n  isMouseInPixelsRegion(mousePoint: Point, canvasData: ImageData): boolean {\r\n    // 调整鼠标坐标（考虑原点偏移和缩放比例）\r\n    const mouseX = Math.floor(mousePoint[0] - this.originX); // 缩放并调整鼠标的 x 坐标\r\n    const mouseY = Math.floor(mousePoint[1] - this.originY); // 缩放并调整鼠标的 y 坐标\r\n    // console.log(`Adjusted mouse coordinates: (${mouseX}, ${mouseY})`);\r\n\r\n    // 获取指定点的像素数据\r\n    // 注意canvasData的高宽是向下取整，所以this.IMAGE_WIDTH要统一向下取整\r\n    const index = (mouseY * Math.floor(this.IMAGE_WIDTH) + mouseX) * 4;\r\n    const pixelAlpha = canvasData.data[index + 3]; // 获取透明度（alpha 通道）\r\n\r\n    // 判断该点是否在 pixels 区域内\r\n    if (pixelAlpha !== 0) {\r\n      // console.log(\"Mouse is inside the pixel region.\");\r\n      return true; // 如果透明度大于 0，说明该点在像素区域内\r\n    }\r\n\r\n    // console.log(\"Mouse is outside the pixel region.\");\r\n    return false; // 否则返回 false\r\n  }\r\n\r\n  getBoundingBoxOfColoredRegion(canvasData: ImageData): Point[] {\r\n    const data = canvasData.data; // 获取图像的 RGBA 数据\r\n    const width = canvasData.width; // 图像的宽度\r\n    const height = canvasData.height; // 图像的高度\r\n\r\n    let xMin = width,\r\n      xMax = 0,\r\n      yMin = height,\r\n      yMax = 0;\r\n\r\n    // 遍历每个像素\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        // 每个像素的 RGBA 数据索引\r\n        const index = (y * width + x) * 4;\r\n\r\n        const r = data[index]; // 红色通道\r\n        const g = data[index + 1]; // 绿色通道\r\n        const b = data[index + 2]; // 蓝色通道\r\n        const a = data[index + 3]; // alpha 通道（透明度）\r\n\r\n        // 判断该像素是否有颜色（alpha不为0或RGB有非零值）\r\n        if (a !== 0 && (r !== 255 || g !== 255 || b !== 255)) {\r\n          // 更新最小和最大坐标\r\n          xMin = Math.min(xMin, x);\r\n          xMax = Math.max(xMax, x);\r\n          yMin = Math.min(yMin, y);\r\n          yMax = Math.max(yMax, y);\r\n        }\r\n      }\r\n    }\r\n\r\n    // 如果没有找到有颜色的像素，返回一个无效的矩形\r\n    if (xMin > xMax || yMin > yMax) {\r\n      return [];\r\n    }\r\n\r\n    return [\r\n      [Math.round(xMin / this.scale), Math.round(yMin / this.scale)],\r\n      [Math.round(xMax / this.scale), Math.round(yMax / this.scale)]\r\n    ];\r\n  }\r\n\r\n  // 提取图像的轮廓点\r\n  getContourPointsOfColoredRegion(\r\n    canvasData: ImageData,\r\n    densityFactor: number = 1\r\n  ): Point[] {\r\n    const data = canvasData.data; // 获取图像的 RGBA 数据\r\n    const width = canvasData.width; // 图像的宽度\r\n    const height = canvasData.height; // 图像的高度\r\n\r\n    const contourPoints: Point[] = [];\r\n\r\n    // 遍历每个像素，寻找有颜色的区域，并根据阈值决定是否为轮廓点\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        const index = (y * width + x) * 4;\r\n        const r = data[index]; // 红色通道\r\n        const g = data[index + 1]; // 绿色通道\r\n        const b = data[index + 2]; // 蓝色通道\r\n        const a = data[index + 3]; // alpha 通道（透明度）\r\n\r\n        // 判断是否为轮廓点：该点周围至少有一个邻居透明度为0的点\r\n        if (a !== 0 && (r !== 255 || g !== 255 || b !== 255)) {\r\n          const isBorderPoint = this.isBorderPoint(x, y, width, height, data);\r\n          if (isBorderPoint) {\r\n            contourPoints.push([\r\n              Math.round(x / this.scale),\r\n              Math.round(y / this.scale)\r\n            ]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // 去除重复点\r\n    const uniquePoints = this.removeDuplicatePoints(\r\n      contourPoints,\r\n      false\r\n    ).resultCoor;\r\n\r\n    // 根据密度因子控制疏密程度\r\n    const sampledPoints = this.samplePointsByDensity(\r\n      uniquePoints,\r\n      densityFactor\r\n    );\r\n\r\n    // 按照顺时针方向以质心为中心排序\r\n    return this.sortByPolarAngle(sampledPoints);\r\n  }\r\n\r\n  // 判断一个点是否是轮廓点\r\n  isBorderPoint(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    data: Uint8ClampedArray\r\n  ): boolean {\r\n    const directions = [\r\n      [-1, 0],\r\n      [1, 0],\r\n      [0, -1],\r\n      [0, 1], // 四个方向\r\n      [-1, -1],\r\n      [-1, 1],\r\n      [1, -1],\r\n      [1, 1] // 四个对角线方向\r\n    ];\r\n\r\n    for (const [dx, dy] of directions) {\r\n      const nx = x + dx;\r\n      const ny = y + dy;\r\n      if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\r\n        const index = (ny * width + nx) * 4;\r\n        const alpha = data[index + 3]; // 获取邻点的透明度\r\n        if (alpha === 0) {\r\n          return true; // 如果邻点是透明的，那么该点为轮廓点\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // 根据密度因子采样轮廓点\r\n  samplePointsByDensity(points: Point[], densityFactor: number): Point[] {\r\n    const sampledPoints: Point[] = [];\r\n    const step = Math.max(1, Math.floor(1 / densityFactor)); // 控制每隔多少个点采样一次\r\n\r\n    for (let i = 0; i < points.length; i += step) {\r\n      sampledPoints.push(points[i]);\r\n    }\r\n\r\n    return sampledPoints;\r\n  }\r\n\r\n  // 计算质心\r\n  calculateCentroid(points: Point[]): Point {\r\n    let sumX = 0;\r\n    let sumY = 0;\r\n    for (let point of points) {\r\n      sumX += point[0];\r\n      sumY += point[1];\r\n    }\r\n    const count = points.length;\r\n    return [sumX / count, sumY / count]; // 计算质心坐标\r\n  }\r\n\r\n  // 计算极角\r\n  calculatePolarAngle(center: Point, point: Point): number {\r\n    const dx = point[0] - center[0];\r\n    const dy = point[1] - center[1];\r\n    return Math.atan2(dy, dx); // 返回的值是 -PI 到 PI\r\n  }\r\n\r\n  // 按极角排序轮廓点\r\n  sortByPolarAngle(points: Point[]): Point[] {\r\n    const center = this.calculateCentroid(points); // 计算质心\r\n    return points.sort((a, b) => {\r\n      const angleA = this.calculatePolarAngle(center, a);\r\n      const angleB = this.calculatePolarAngle(center, b);\r\n      return angleA - angleB; // 从小到大排序（顺时针）\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 判断是图形是否属于嵌套关系 (目前只支持矩形和多边形)\r\n   * @param shape1 标注实例\r\n   * @param shape2 标注实例\r\n   * @returns 布尔值\r\n   */\r\n  isNested(shape1: Rect | Polygon, shape2: Rect | Polygon): boolean {\r\n    return isNested(shape1, shape2);\r\n  }\r\n\r\n  /**\r\n   * 绘制矩形\r\n   * @param shape 标注实例\r\n   * @returns\r\n   */\r\n  drawRect(shape: Rect, sub?: Record<string, any>) {\r\n    if (shape.coor.length !== 2) return;\r\n    const {\r\n      strokeStyle,\r\n      fillStyle,\r\n      active,\r\n      creating,\r\n      coor,\r\n      lineWidth,\r\n      labelType\r\n    } = shape;\r\n    const [[x0, y0], [x1, y1]] = coor.map((a: Point) =>\r\n      a.map((b) => Math.round(b * this.scale))\r\n    );\r\n    this.ctx.save();\r\n    this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n    this.ctx.fillStyle =\r\n      active || creating ? this.activeFillStyle : fillStyle || this.fillStyle;\r\n    this.ctx.strokeStyle =\r\n      active || creating\r\n        ? this.activeStrokeStyle\r\n        : strokeStyle || this.strokeStyle;\r\n    const w = x1 - x0;\r\n    const h = y1 - y0;\r\n    if (!creating) {\r\n      if (labelType === 1) {\r\n        this.ctx.setLineDash([5, 5]);\r\n      } else {\r\n        this.ctx.setLineDash([]);\r\n      }\r\n      this.ctx.fillRect(x0, y0, w, h);\r\n    }\r\n    this.ctx.strokeRect(x0, y0, w, h);\r\n    this.ctx.restore();\r\n    let center = [(coor[1][0] + coor[0][0]) / 2, (coor[1][1] + coor[0][1]) / 2];\r\n    if (labelType === 0) {\r\n      this.drawLabel([coor[0][0], coor[0][1]] as Point, shape, \"top\");\r\n    } else if (labelType === 1) {\r\n      this.drawLabel([coor[1][0], coor[0][1]] as Point, shape, \"top\");\r\n    } else {\r\n      this.drawLabel(center as Point, shape, \"center\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制多边形\r\n   * @param shape 标注实例\r\n   */\r\n  drawPolygon(shape: Polygon) {\r\n    const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape;\r\n    this.ctx.save();\r\n    this.ctx.lineJoin = \"round\";\r\n    this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n    this.ctx.fillStyle =\r\n      active || creating ? this.activeFillStyle : fillStyle || this.fillStyle;\r\n    this.ctx.strokeStyle =\r\n      active || creating\r\n        ? this.activeStrokeStyle\r\n        : strokeStyle || this.strokeStyle;\r\n    this.ctx.beginPath();\r\n    coor.forEach((el: Point, i) => {\r\n      const [x, y] = el.map((a) => Math.round(a * this.scale));\r\n      if (i === 0) {\r\n        this.ctx.moveTo(x, y);\r\n      } else {\r\n        this.ctx.lineTo(x, y);\r\n      }\r\n    });\r\n    if (creating) {\r\n      const [x, y] = this.mouse || [];\r\n      this.ctx.lineTo(x - this.originX, y - this.originY);\r\n    } else if (coor.length > 2) {\r\n      this.ctx.closePath();\r\n    }\r\n    this.ctx.fill();\r\n    this.ctx.stroke();\r\n    this.ctx.restore();\r\n    this.drawLabel(this.calculateCenter(coor), shape);\r\n  }\r\n\r\n  /**\r\n   * 绘制点\r\n   * @param shape 标注实例\r\n   */\r\n  drawDot(shape: Dot) {\r\n    if (shape.color === \"\") {\r\n      // 关键点\r\n      const { strokeStyle, fillStyle, active, coor, lineWidth } = shape;\r\n      const [x, y] = coor.map((a) => a * this.scale);\r\n      this.ctx.save();\r\n      this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n      this.ctx.fillStyle = active\r\n        ? this.activeFillStyle\r\n        : fillStyle || this.ctrlFillStyle;\r\n      this.ctx.strokeStyle = active\r\n        ? this.activeStrokeStyle\r\n        : strokeStyle || this.strokeStyle;\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n      this.ctx.fill();\r\n      this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n      this.drawLabel(coor as Point, shape);\r\n    } else {\r\n      // 智能标注点（SAM）\r\n      const { color, coor } = shape;\r\n      const [x, y] = coor.map((a) => a * this.scale);\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(x, y, 3, 0, Math.PI * 2);\r\n      this.ctx.fillStyle = `rgba(255, 255, 255, 0.75)`;\r\n      this.ctx.fill();\r\n      this.ctx.strokeStyle = color;\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制圆\r\n   * @param shape 标注实例\r\n   */\r\n  drawCirle(shape: Circle) {\r\n    const {\r\n      strokeStyle,\r\n      fillStyle,\r\n      active,\r\n      coor,\r\n      label,\r\n      creating,\r\n      radius,\r\n      ctrlsData,\r\n      lineWidth,\r\n      labelType\r\n    } = shape;\r\n    const [x, y] = coor.map((a) => a * this.scale);\r\n    this.ctx.save();\r\n    this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n    this.ctx.fillStyle =\r\n      active || creating ? this.activeFillStyle : fillStyle || this.fillStyle;\r\n    this.ctx.strokeStyle =\r\n      active || creating\r\n        ? this.activeStrokeStyle\r\n        : strokeStyle || this.strokeStyle;\r\n    this.ctx.beginPath();\r\n    if (labelType === 1) {\r\n      this.ctx.setLineDash([8, 10]);\r\n    } else {\r\n      this.ctx.setLineDash([]);\r\n    }\r\n    this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\r\n    this.ctx.fill();\r\n    this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\r\n    this.ctx.stroke();\r\n    this.ctx.restore();\r\n    this.drawLabel(shape.coor as Point, shape);\r\n  }\r\n\r\n  /**\r\n   * 绘制折线\r\n   * @param shape 标注实例\r\n   */\r\n  drawLine(shape: Line) {\r\n    const { strokeStyle, active, creating, coor, lineWidth, labelType } = shape;\r\n    this.ctx.save();\r\n    this.ctx.lineJoin = \"round\";\r\n    this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n    this.ctx.strokeStyle =\r\n      active || creating\r\n        ? this.activeStrokeStyle\r\n        : strokeStyle || this.strokeStyle;\r\n    if (labelType === 1) {\r\n      this.ctx.setLineDash([5, 5]);\r\n    } else {\r\n      this.ctx.setLineDash([]);\r\n    }\r\n    this.ctx.beginPath();\r\n    coor.forEach((el: Point, i) => {\r\n      const [x, y] = el.map((a) => Math.round(a * this.scale));\r\n      if (i === 0) {\r\n        this.ctx.moveTo(x, y);\r\n      } else {\r\n        this.ctx.lineTo(x, y);\r\n      }\r\n    });\r\n    if (creating) {\r\n      const [x, y] = this.mouse || [];\r\n      this.ctx.lineTo(x - this.originX, y - this.originY);\r\n    }\r\n    this.ctx.stroke();\r\n    this.ctx.restore();\r\n    if (labelType === 0) {\r\n      this.drawLabel(coor[0], shape);\r\n    } else {\r\n      this.drawLabel(coor[1], shape);\r\n    }\r\n  }\r\n\r\n  hexToRGBA(hex: string, alpha = 0.7) {\r\n    // 去掉 # 号\r\n    let hexCode = hex.replace(/^#/, \"\");\r\n\r\n    // 检查输入的 hex 是否是有效的三位或六位颜色代码\r\n    if (\r\n      !/^[A-Fa-f0-9]{3}$/.test(hexCode) &&\r\n      !/^[A-Fa-f0-9]{6}$/.test(hexCode)\r\n    ) {\r\n      return hex;\r\n    }\r\n\r\n    // 如果是三位颜色代码，扩展为六位\r\n    if (hexCode.length === 3) {\r\n      hexCode = hexCode\r\n        .split(\"\")\r\n        .map((char) => char + char)\r\n        .join(\"\");\r\n    }\r\n\r\n    // 将颜色代码拆分为 R, G, B 组件\r\n    const r = parseInt(hexCode.slice(0, 2), 16); // 提取红色部分\r\n    const g = parseInt(hexCode.slice(2, 4), 16); // 提取绿色部分\r\n    const b = parseInt(hexCode.slice(4, 6), 16); // 提取蓝色部分\r\n\r\n    // 返回带有透明度的 RGBA 格式颜色\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n  }\r\n\r\n  rgbaToHex(rgba: string, includeAlpha: boolean = false): string {\r\n    // 去掉 rgba 前后的空格和括号\r\n    rgba = rgba.trim().replace(/\\s/g, \"\");\r\n    const rgbaArray = rgba.match(\r\n      /(\\d{1,3}),(\\d{1,3}),(\\d{1,3}),?(\\d+(\\.\\d+)?)?/\r\n    );\r\n\r\n    if (!rgbaArray) {\r\n      return rgba; // 如果输入不是有效的 rgba 格式，返回原字符串\r\n    }\r\n\r\n    const r = parseInt(rgbaArray[1], 10);\r\n    const g = parseInt(rgbaArray[2], 10);\r\n    const b = parseInt(rgbaArray[3], 10);\r\n    const a = rgbaArray[4] ? parseFloat(rgbaArray[4]) : 1.0;\r\n\r\n    // 将 R, G, B 转换为两位的十六进制字符串\r\n    const hexR = r.toString(16).padStart(2, \"0\");\r\n    const hexG = g.toString(16).padStart(2, \"0\");\r\n    const hexB = b.toString(16).padStart(2, \"0\");\r\n\r\n    if (includeAlpha) {\r\n      // 将透明度转换为两位的十六进制字符串\r\n      const hexA = Math.round(a * 255)\r\n        .toString(16)\r\n        .padStart(2, \"0\");\r\n      return `#${hexR}${hexG}${hexB}${hexA}`;\r\n    } else {\r\n      return `#${hexR}${hexG}${hexB}`;\r\n    }\r\n  }\r\n\r\n  isRGBA(color: string): boolean {\r\n    const rgbaRegex =\r\n      /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(0(\\.\\d+)?|1(\\.0+)?)\\)$/;\r\n    return rgbaRegex.test(color);\r\n  }\r\n\r\n  removeDuplicatePoints(\r\n    points: [number, number][],\r\n    getBunding: boolean = false,\r\n    removePoints: boolean = true\r\n  ) {\r\n    const seen = new Set();\r\n    const uniquePoints: [number, number][] = [];\r\n    let maxX = points[0][0],\r\n      minX = points[0][0],\r\n      maxY = points[0][1],\r\n      minY = points[0][1];\r\n\r\n    if (!removePoints) {\r\n      if (getBunding) {\r\n        points.forEach((point) => {\r\n          // 计算最大最小值\r\n          if (point[0] !== -1 && point[1] !== -1) {\r\n            maxX = Math.max(maxX, point[0]);\r\n            maxY = Math.max(maxY, point[1]);\r\n            minX = Math.min(minX, point[0]);\r\n            minY = Math.min(minY, point[1]);\r\n          }\r\n        });\r\n        if (this.activeShape.type === Shape.Brush) {\r\n          return {\r\n            resultRect: [\r\n              minX - this.activeShape.lineWidth / 2,\r\n              minY - this.activeShape.lineWidth / 2,\r\n              maxX - minX + this.activeShape.lineWidth,\r\n              maxY - minY + this.activeShape.lineWidth\r\n            ]\r\n          };\r\n        } else {\r\n          return {\r\n            resultRect: [minX, minY, maxX - minX, maxY - minY]\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (getBunding) {\r\n        points.forEach((point) => {\r\n          // 坐标点去重\r\n          const key = `${point[0]},${point[1]}`;\r\n          if (!seen.has(key)) {\r\n            seen.add(key);\r\n            uniquePoints.push(point);\r\n          }\r\n          // 计算最大最小值\r\n          if (getBunding && point[0] !== -1 && point[1] !== -1) {\r\n            maxX = Math.max(maxX, point[0]);\r\n            maxY = Math.max(maxY, point[1]);\r\n            minX = Math.min(minX, point[0]);\r\n            minY = Math.min(minY, point[1]);\r\n          }\r\n        });\r\n        if (this.activeShape.type === Shape.Brush) {\r\n          return {\r\n            resultCoor: uniquePoints,\r\n            resultRect: [\r\n              minX - this.brushlineWidth / 2,\r\n              minY - this.brushlineWidth / 2,\r\n              maxX - minX + this.brushlineWidth,\r\n              maxY - minY + this.brushlineWidth\r\n            ]\r\n          };\r\n        } else {\r\n          return {\r\n            resultCoor: uniquePoints,\r\n            resultRect: [minX, minY, maxX - minX, maxY - minY]\r\n          };\r\n        }\r\n      } else {\r\n        const epsilon = 5.0;\r\n        for (const point of points) {\r\n          const key = `${point[0]},${point[1]}`;\r\n\r\n          // 去重\r\n          if (seen.has(key)) continue;\r\n\r\n          // 若已有点，判断与前一个的距离\r\n          const lastPoint = uniquePoints[uniquePoints.length - 1];\r\n          if (lastPoint) {\r\n            const dx = point[0] - lastPoint[0];\r\n            const dy = point[1] - lastPoint[1];\r\n            const dist = Math.hypot(dx, dy); // 等价于 sqrt(dx² + dy²)\r\n\r\n            if (dist < epsilon) continue; // 太近，跳过\r\n          }\r\n\r\n          // 添加点\r\n          seen.add(key);\r\n          uniquePoints.push(point);\r\n        }\r\n        return { resultCoor: uniquePoints };\r\n      }\r\n    }\r\n  }\r\n\r\n  relEncodeBinary(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): number[] {\r\n    const scaledWidth = Math.round(width * this.scale);\r\n    const scaledHeight = Math.round(height * this.scale);\r\n\r\n    // 1. 读取放大区域原始像素\r\n    const imageData = this.ctx.getImageData(\r\n      Math.round(x * this.scale + this.originX),\r\n      Math.round(y * this.scale + this.originY),\r\n      scaledWidth,\r\n      scaledHeight\r\n    );\r\n\r\n    // 2. 创建离屏canvas用于缩放回目标大小 width x height\r\n    const offscreenBig = document.createElement(\"canvas\");\r\n    offscreenBig.width = scaledWidth;\r\n    offscreenBig.height = scaledHeight;\r\n    const bigCtx = offscreenBig.getContext(\"2d\")!;\r\n    bigCtx.putImageData(imageData, 0, 0);\r\n\r\n    const offscreenSmall = document.createElement(\"canvas\");\r\n    offscreenSmall.width = width;\r\n    offscreenSmall.height = height;\r\n    const smallCtx = offscreenSmall.getContext(\"2d\")!;\r\n    smallCtx.drawImage(\r\n      offscreenBig,\r\n      0,\r\n      0,\r\n      scaledWidth,\r\n      scaledHeight,\r\n      0,\r\n      0,\r\n      width,\r\n      height\r\n    );\r\n\r\n    // 3. 获取缩放后的像素数据（大小为 width * height）\r\n    const scaledImageData = smallCtx.getImageData(0, 0, width, height);\r\n    const pixelData = scaledImageData.data;\r\n\r\n    // 4. 进行二值RLE编码（白色0，非白1）\r\n    const result: number[] = [];\r\n    let i = 0;\r\n\r\n    // canvas的背景透明度<0.25，所以当获取的颜色透明度<0.25时，认为是背景色\r\n    const isBackground = (idx: number) => pixelData[idx + 3] <= 64;\r\n\r\n    while (i < pixelData.length) {\r\n      const value = isBackground(i) ? 0 : 1;\r\n      let count = 1;\r\n\r\n      while (\r\n        i + count * 4 < pixelData.length &&\r\n        (isBackground(i + count * 4) ? 0 : 1) === value\r\n      ) {\r\n        count++;\r\n      }\r\n\r\n      // result.push(value, count);\r\n      result.push(count);\r\n      i += count * 4;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  relDecodeBinary(\r\n    encoded: number[],\r\n    nonWhiteColor: string = \"rgba(0,0,0,1)\"\r\n  ): Uint8ClampedArray {\r\n    // 解析非白颜色\r\n    function parseRGBA(colorStr: string): [number, number, number, number] {\r\n      const inside = colorStr\r\n        .trim()\r\n        .replace(/^rgba?\\(/, \"\")\r\n        .replace(/\\)$/, \"\");\r\n\r\n      const parts = inside.split(\",\").map((s) => s.trim());\r\n\r\n      if (parts.length !== 4) {\r\n        throw new Error(\"颜色格式错误，应该是 rgba(R,G,B,A)\");\r\n      }\r\n\r\n      const r = Number(parts[0]);\r\n      const g = Number(parts[1]);\r\n      const b = Number(parts[2]);\r\n      let a = Number(parts[3]);\r\n\r\n      if (\r\n        [r, g, b].some((c) => isNaN(c) || c < 0 || c > 255) ||\r\n        isNaN(a) ||\r\n        a < 0 ||\r\n        a > 1\r\n      ) {\r\n        throw new Error(\"颜色数值超出范围\");\r\n      }\r\n\r\n      a = Math.round(a * 255);\r\n\r\n      return [r, g, b, a];\r\n    }\r\n\r\n    const fillColor = parseRGBA(nonWhiteColor);\r\n\r\n    // 计算总像素数\r\n    // let totalPixels = 0;\r\n    // for (let i = 1; i < encoded.length; i += 2) {\r\n    //   totalPixels += encoded[i];\r\n    // }\r\n\r\n    // const pixelData = new Uint8ClampedArray(totalPixels * 4);\r\n\r\n    // let i = 0;\r\n    // let dataIndex = 0;\r\n\r\n    // while (i < encoded.length) {\r\n    //   const value = encoded[i];\r\n    //   const count = encoded[i + 1];\r\n\r\n    //   const color = value === 0 ? [0, 0, 0, 0] : fillColor;\r\n\r\n    //   for (let j = 0; j < count; j++) {\r\n    //     pixelData.set(color, dataIndex);\r\n    //     dataIndex += 4;\r\n    //   }\r\n\r\n    //   i += 2;\r\n    // }\r\n    // 计算总像素数\r\n    let totalPixels = 0;\r\n    for (let i = 0; i < encoded.length; i++) {\r\n      totalPixels += encoded[i];\r\n    }\r\n\r\n    const pixelData = new Uint8ClampedArray(totalPixels * 4);\r\n\r\n    let i = 0;\r\n    let dataIndex = 0;\r\n\r\n    while (i < encoded.length) {\r\n      const value = i % 2 === 0 ? 0 : 1;\r\n      const count = encoded[i];\r\n\r\n      const color = value === 0 ? [0, 0, 0, 0] : fillColor;\r\n\r\n      for (let j = 0; j < count; j++) {\r\n        pixelData.set(color, dataIndex);\r\n        dataIndex += 4;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    return pixelData;\r\n  }\r\n\r\n  mergeToBrushMask() {\r\n    let minX = -1,\r\n      minY = -1,\r\n      maxX = -1,\r\n      maxY = -1;\r\n    let color = \"\";\r\n    let tagId = \"\";\r\n    let label = \"\";\r\n    for (let i = this.dataset.length - 1; i >= 0; i--) {\r\n      if (this.dataset[i].type === Shape.Brush) {\r\n        const shape = this.dataset[i] as Brush;\r\n        const [x0, y0, w, h] = shape.boundingRect;\r\n        const x1 = x0 + w;\r\n        const y1 = y0 + h;\r\n        color = shape.strokeStyle;\r\n        tagId = shape.tagId;\r\n        label = shape.label;\r\n        minX = minX < 0 ? x0 : minX;\r\n        minY = minY < 0 ? x0 : minY;\r\n        minX = Math.min(minX, x0);\r\n        minY = Math.min(minY, y0);\r\n        maxX = Math.max(maxX, x1);\r\n        maxY = Math.max(maxY, y1);\r\n        this.dataset.splice(i, 1);\r\n      } else if (this.dataset[i].type === Shape.BrushMask) {\r\n        const shape = this.dataset[i] as BrushMask;\r\n        const [x0, y0] = shape.startPoint;\r\n        const x1 = x0 + shape.width;\r\n        const y1 = y0 + shape.height;\r\n        color = shape.fillStyle;\r\n        tagId = shape.tagId;\r\n        label = shape.label;\r\n        minX = minX < 0 ? x0 : minX;\r\n        minY = minY < 0 ? x0 : minY;\r\n        minX = Math.min(minX, x0);\r\n        minY = Math.min(minY, y0);\r\n        maxX = Math.max(maxX, x1);\r\n        maxY = Math.max(maxY, y1);\r\n        this.dataset.splice(i, 1);\r\n      }\r\n    }\r\n    const brushMask = new BrushMask(\r\n      {\r\n        encodePixelData: this.relEncodeBinary(\r\n          minX - 1,\r\n          minY - 1,\r\n          maxX - minX + 2,\r\n          maxY - minY + 2\r\n        ), // 示例的编码数据\r\n        startPoint: [minX - 1, minY - 1], // 示例的起始点\r\n        width: maxX - minX + 2, // 宽度\r\n        height: maxY - minY + 2, // 高度\r\n        fillStyle: color,\r\n        tagId: tagId,\r\n        label: label\r\n      },\r\n      this.dataset.length\r\n    );\r\n    console.log(brushMask);\r\n    // this.dataset.push(brushMask);\r\n    this.dataset.forEach((item, i) => {\r\n      item.index = i;\r\n    });\r\n    this.update();\r\n    return brushMask;\r\n  }\r\n\r\n  /**\r\n   * 绘制轨迹\r\n   * @param shape 轨迹实例\r\n   */\r\n  drawBrush(shape: Brush) {\r\n    const {\r\n      strokeStyle,\r\n      active,\r\n      creating,\r\n      coor,\r\n      lineWidth,\r\n      iseraser,\r\n      boundingRect\r\n    } = shape;\r\n    this.ctx.save();\r\n    this.ctx.lineJoin = \"round\";\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.lineWidth = lineWidth || this.brushlineWidth;\r\n\r\n    // 应用缩放\r\n    this.ctx.scale(this.scale, this.scale);\r\n\r\n    if (coor.length > 1) {\r\n      // 至少两个点才能绘制路径\r\n      if (iseraser) {\r\n        // 设置颜色，包含透明度\r\n        this.ctx.strokeStyle = \"rgba(255, 0, 0, 1)\";\r\n        this.ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\r\n        this.ctx.globalCompositeOperation = \"destination-out\"; // 橡皮擦效果\r\n      } else {\r\n        const color =\r\n          active || creating\r\n            ? this.activeStrokeStyle\r\n            : strokeStyle || this.brushstrokeStyle;\r\n        this.ctx.strokeStyle = color;\r\n        this.ctx.fillStyle = color;\r\n        this.ctx.globalCompositeOperation = \"source-over\";\r\n      }\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(coor[0][0], coor[0][1]); // 从第一个点开始\r\n\r\n      for (let i = 1; i < coor.length; i++) {\r\n        this.ctx.lineTo(coor[i][0], coor[i][1]); // 绘制到下一个点\r\n      }\r\n\r\n      this.ctx.stroke();\r\n\r\n      // if (active && boundingRect.length > 0) {\r\n      //   const [x, y, w, h] = boundingRect;\r\n      //   this.ctx.lineWidth = 1;\r\n      //   this.ctx.strokeStyle = this.activeStrokeStyle;\r\n      //   this.ctx.beginPath();\r\n      //   this.ctx.strokeRect(x, y, w, h);\r\n      //   this.ctx.stroke();\r\n      // }\r\n    }\r\n    this.ctx.restore();\r\n  }\r\n\r\n  drawBrushMask(shape: BrushMask) {\r\n    const { encodePixelData, startPoint, height, width, fillStyle } = shape;\r\n\r\n    // 1. 解码得到原始大小的像素数据（未缩放）\r\n    const pixelData = this.relDecodeBinary(encodePixelData, fillStyle);\r\n\r\n    // 2. 创建 ImageData，大小是原始 width, height\r\n    const imageData = new ImageData(pixelData, width, height);\r\n\r\n    // 3. 创建离屏 canvas，绘制 ImageData\r\n    const offCanvas = document.createElement(\"canvas\");\r\n    offCanvas.width = width;\r\n    offCanvas.height = height;\r\n    const offCtx = offCanvas.getContext(\"2d\");\r\n    offCtx.putImageData(imageData, 0, 0);\r\n\r\n    // 4. 将离屏 canvas 绘制到目标 ctx，并通过 drawImage 缩放\r\n    this.ctx.drawImage(\r\n      offCanvas,\r\n      0,\r\n      0,\r\n      width,\r\n      height,\r\n      startPoint[0] * this.scale,\r\n      startPoint[1] * this.scale,\r\n      width * this.scale,\r\n      height * this.scale\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 绘制网格\r\n   * @param shape 标注实例\r\n   * @returns\r\n   */\r\n  drawGrid(shape: Grid) {\r\n    if (shape.coor.length !== 2) return;\r\n    const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape;\r\n    const [[x0, y0], [x1, y1]] = coor.map((a: Point) =>\r\n      a.map((b) => Math.round(b * this.scale))\r\n    );\r\n    this.ctx.save();\r\n    this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n    this.ctx.fillStyle =\r\n      active || creating ? this.activeFillStyle : fillStyle || this.fillStyle;\r\n    this.ctx.strokeStyle =\r\n      active || creating\r\n        ? this.activeStrokeStyle\r\n        : strokeStyle || this.strokeStyle;\r\n    shape.gridRects.forEach((rect: Rect, m) => {\r\n      this.drawRect(rect, {\r\n        selectedFillStyle:\r\n          shape.selectedFillStyle || this.gridSelectedFillStyle,\r\n        isSelected: shape.selected?.includes(m)\r\n      });\r\n    });\r\n    const w = x1 - x0;\r\n    const h = y1 - y0;\r\n    if (!creating) this.ctx.fillRect(x0, y0, w, h);\r\n    this.ctx.strokeRect(x0, y0, w, h);\r\n    this.ctx.restore();\r\n    this.drawLabel(coor[0], shape);\r\n  }\r\n\r\n  /**\r\n   * 绘制控制点\r\n   * @param point 坐标\r\n   */\r\n  drawCtrl(point: Point) {\r\n    const [x, y] = point.map((a) => a * this.scale);\r\n    this.ctx.save();\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = this.ctrlFillStyle;\r\n    this.ctx.strokeStyle = this.ctrlStrokeStyle;\r\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n    this.ctx.fill();\r\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n    this.ctx.stroke();\r\n    this.ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * 绘制控制点列表\r\n   * @param shape 标注实例\r\n   */\r\n  drawCtrlList(shape: Rect | Polygon | Line) {\r\n    shape.ctrlsData.forEach((point, i) => {\r\n      if (\r\n        (shape.type === Shape.Polygon || shape.type === Shape.Line) &&\r\n        (i === this.ctrlIndex || i === this.clickIndex)\r\n      ) {\r\n        this.ctrlStrokeStyle = \"red\";\r\n        this.ctrlRadius = 5;\r\n      } else {\r\n        this.ctrlStrokeStyle = \"#000\";\r\n        this.ctrlRadius = 3;\r\n      }\r\n      if (shape.type === Shape.Circle) {\r\n        if (i === 1) this.drawCtrl(point);\r\n      } else {\r\n        this.drawCtrl(point);\r\n      }\r\n    });\r\n  }\r\n\r\n  // 计算多个坐标的中心位置\r\n  calculateCenter(points: [number, number][]): [number, number] {\r\n    if (points.length === 0) {\r\n      throw new Error(\"Points array cannot be empty.\");\r\n    }\r\n\r\n    const sum = points.reduce(\r\n      (acc, [x, y]) => {\r\n        acc[0] += x; // 累加 x 坐标\r\n        acc[1] += y; // 累加 y 坐标\r\n        return acc;\r\n      },\r\n      [0, 0]\r\n    );\r\n\r\n    const centerX = sum[0] / points.length; // 计算平均 x 坐标\r\n    const centerY = sum[1] / points.length; // 计算平均 y 坐标\r\n\r\n    return [centerX, centerY] as Point; // 返回中心坐标\r\n  }\r\n\r\n  getImagedataFromImageClass = (\r\n    image: HTMLImageElement,\r\n    masktype: string\r\n  ): Uint8ClampedArray | null => {\r\n    // 创建一个临时的 canvas 元素用于处理图像\r\n    const maskCanvas = document.createElement(\"canvas\");\r\n    const maskContext = maskCanvas.getContext(\"2d\", {\r\n      willReadFrequently: true\r\n    });\r\n\r\n    if (!maskCanvas || !maskContext) {\r\n      console.error(\"Canvas or context is not initialized\");\r\n      return null;\r\n    }\r\n\r\n    maskCanvas.width = this.WIDTH;\r\n    maskCanvas.height = this.HEIGHT;\r\n\r\n    // 将图像绘制到临时 canvas 上\r\n    const tmpCanvas = document.createElement(\"canvas\");\r\n    const tmpContext = tmpCanvas.getContext(\"2d\", { willReadFrequently: true });\r\n\r\n    if (!tmpContext) {\r\n      console.error(\"Temporary canvas context is not initialized\");\r\n      return null;\r\n    }\r\n\r\n    tmpCanvas.width = this.WIDTH;\r\n    tmpCanvas.height = this.HEIGHT;\r\n    tmpContext.drawImage(image, 0, 0);\r\n\r\n    let imageData = tmpContext?.getImageData(\r\n      0,\r\n      0,\r\n      tmpCanvas.width,\r\n      tmpCanvas.height\r\n    );\r\n    let pixelData = imageData?.data;\r\n\r\n    if (!pixelData) {\r\n      console.error(\"Failed to retrieve pixel data\");\r\n      return null;\r\n    }\r\n\r\n    // 获取 maskCanvas 的图像数据\r\n    const imageMask = maskContext.getImageData(0, 0, this.WIDTH, this.HEIGHT);\r\n    const maskData = imageMask.data;\r\n\r\n    // 根据 masktype 处理图像数据\r\n    if (masktype === \"everything\") {\r\n      for (let i = 0; i < pixelData.length; i += 4) {\r\n        if (pixelData[i] > 0) {\r\n          const colorIndex = pixelData[i] % this.random_color.length;\r\n          maskData[i] = this.random_color[colorIndex].r; // red\r\n          maskData[i + 1] = this.random_color[colorIndex].g; // green\r\n          maskData[i + 2] = this.random_color[colorIndex].b; // blue\r\n          maskData[i + 3] = this.mask_alpha; // alpha\r\n        }\r\n      }\r\n      maskContext.putImageData(imageMask, 0, 0);\r\n    } else if (masktype === \"rect\") {\r\n    } else if (masktype === \"magic\") {\r\n      let pixels = [];\r\n      // Get the pixel indices of the mask\r\n      for (let i = 0; i < pixelData.length; i += 4) {\r\n        if (\r\n          pixelData[i] == 255 &&\r\n          pixelData[i + 1] == 255 &&\r\n          pixelData[i + 2] == 255\r\n        ) {\r\n          pixels.push(i);\r\n        }\r\n      }\r\n    } else {\r\n      console.error(\"Unknown mask type\");\r\n      return null;\r\n    }\r\n\r\n    // 创建一个新的 canvas 元素并绘制缩放后的图像\r\n    const scaledCanvas = document.createElement(\"canvas\");\r\n    const scaledContext = scaledCanvas.getContext(\"2d\", {\r\n      willReadFrequently: true\r\n    });\r\n\r\n    if (!scaledContext) {\r\n      console.error(\"Scaled canvas context is not initialized\");\r\n      return null;\r\n    }\r\n\r\n    scaledCanvas.width = this.IMAGE_WIDTH;\r\n    scaledCanvas.height = this.IMAGE_HEIGHT;\r\n    scaledContext.drawImage(image, 0, 0, this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\r\n\r\n    // 获取缩放后的图像数据\r\n    const scaledImageData = scaledContext.getImageData(\r\n      0,\r\n      0,\r\n      this.IMAGE_WIDTH,\r\n      this.IMAGE_HEIGHT\r\n    );\r\n    return scaledImageData.data;\r\n  };\r\n\r\n  putDataOnCanvas(\r\n    thisCanvas: HTMLCanvasElement,\r\n    pixels: number[],\r\n    fillStyle: string,\r\n    putImageData: boolean = true\r\n  ) {\r\n    const thisContext = thisCanvas.getContext(\"2d\", {\r\n      willReadFrequently: true\r\n    });\r\n    if (!thisContext) {\r\n      return;\r\n    }\r\n    const canvasData = thisContext.getImageData(\r\n      this.originX,\r\n      this.originY,\r\n      this.IMAGE_WIDTH,\r\n      this.IMAGE_HEIGHT\r\n    );\r\n    const data = canvasData.data;\r\n    const rgbaRegex = /rgba?\\((\\d+), (\\d+), (\\d+)(?:, ([0-9.]+))?\\)/;\r\n    const replacementColor = fillStyle.match(rgbaRegex);\r\n\r\n    for (let i = 0; i < pixels.length; i += 1) {\r\n      data[pixels[i]] = parseInt(replacementColor[1], 10); // red\r\n      data[pixels[i] + 1] = parseInt(replacementColor[2], 10); // green\r\n      data[pixels[i] + 2] = parseInt(replacementColor[3], 10); // blue\r\n      data[pixels[i] + 3] =\r\n        (replacementColor[4] !== undefined\r\n          ? parseFloat(replacementColor[4])\r\n          : 0.5) * 255; // alpha\r\n    }\r\n    if (putImageData) {\r\n      thisContext.putImageData(canvasData, this.originX, this.originY);\r\n    }\r\n    return canvasData;\r\n  }\r\n\r\n  drawPromptPointOnClick = (\r\n    thisPrompt: MagicPoint,\r\n    canvas: HTMLCanvasElement\r\n  ): void => {\r\n    const x = thisPrompt.coor[0] * this.scale;\r\n    const y = thisPrompt.coor[1] * this.scale;\r\n\r\n    const fillColor = `rgba(255, 255, 255, 0.75)`;\r\n    const strokeColor = thisPrompt.color;\r\n\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    if (!context) return;\r\n\r\n    context.beginPath();\r\n    context.arc(x, y, 3, 0, Math.PI * 2);\r\n    context.fillStyle = fillColor;\r\n    context.fill();\r\n    context.strokeStyle = strokeColor;\r\n    context.stroke();\r\n  };\r\n\r\n  /**\r\n   * 高亮Mask\r\n   * @param index Mask的索引\r\n   * @param highlight 是否高亮\r\n   * @returns\r\n   */\r\n  highlightMask(index: number) {\r\n    let activeColor = \"\";\r\n    if (index > -1) {\r\n      const shape = this.dataset[index];\r\n      activeColor = shape.fillStyle.replace(\r\n        /rgba\\((\\d+), (\\d+), (\\d+), (\\d+(\\.\\d+)?)\\)/,\r\n        (match, r, g, b, a) => {\r\n          return `rgba(${r}, ${g}, ${b}, 0.75)`;\r\n        }\r\n      );\r\n      shape.fillStyle = activeColor;\r\n      // this.update();\r\n    } else {\r\n      // let state = false;\r\n      for (let i = 0; i < this.dataset.length; i++) {\r\n        if (this.dataset[i].type === Shape.Mask) {\r\n          activeColor = this.dataset[i].fillStyle.replace(\r\n            /rgba\\((\\d+), (\\d+), (\\d+), (\\d+(\\.\\d+)?)\\)/,\r\n            (match, r, g, b, a) => {\r\n              return `rgba(${r}, ${g}, ${b}, 0.5)`;\r\n            }\r\n          );\r\n          this.dataset[i].fillStyle = activeColor;\r\n          // state = true;\r\n        }\r\n      }\r\n      // if(state){\r\n      //     this.update();\r\n      // }\r\n    }\r\n    this.update(); // 此处，一方面用于更新Mask高亮；另一方面用于更新控制点加粗变红\r\n  }\r\n\r\n  changeMaskPolygon(densityFactor: number) {\r\n    const polygonShape = this.dataset.find(\r\n      (item) => item.uuid === this.activePolygon\r\n    );\r\n    polygonShape.coor = this.getContourPointsOfColoredRegion(\r\n      this.activeCanvasData,\r\n      densityFactor\r\n    );\r\n    this.update();\r\n  }\r\n\r\n  endMagicTool() {\r\n    this.manageDoneList(deepClone(this.dataset));\r\n  }\r\n\r\n  /**\r\n   * 绘制Mask\r\n   * @param shape 标注实例\r\n   * @returns\r\n   */\r\n  drawMask(shape: Mask) {\r\n    if (\r\n      shape.pixels.length !== 0 &&\r\n      shape.height === this.IMAGE_HEIGHT &&\r\n      shape.weight === this.IMAGE_WIDTH\r\n    ) {\r\n      this.putDataOnCanvas(this.canvas, shape.pixels, shape.fillStyle);\r\n      // console.log(shape.pixels);\r\n      return;\r\n    }\r\n    const maskBase64 = shape.maskBase64;\r\n    // 将 base64 转换为图像\r\n    const maskImage = new Image();\r\n    maskImage.crossOrigin = \"Anonymous\";\r\n    maskImage.src = `data:image/png;base64,${maskBase64}`;\r\n\r\n    const self = this;\r\n\r\n    // 处理图像数据\r\n    maskImage.onload = () => {\r\n      if (shape.maskType === \"everything\") {\r\n        const pixelData = self.getImagedataFromImageClass(\r\n          maskImage,\r\n          \"everything\"\r\n        );\r\n\r\n        if (pixelData) {\r\n          const canvasData = self.ctx.getImageData(\r\n            self.originX,\r\n            self.originY,\r\n            self.IMAGE_WIDTH,\r\n            self.IMAGE_HEIGHT\r\n          );\r\n          const data = canvasData.data;\r\n\r\n          // 遍历图像像素并修改对应的颜色\r\n          for (let i = 0; i < pixelData.length; i += 4) {\r\n            if (pixelData[i] > 0) {\r\n              const color =\r\n                self.random_color[pixelData[i] % self.random_color.length];\r\n              data[i] = color.r; // red\r\n              data[i + 1] = color.g; // green\r\n              data[i + 2] = color.b; // blue\r\n              data[i + 3] = this.mask_alpha; // alpha\r\n            }\r\n          }\r\n\r\n          // 更新 canvas 上的图像数据\r\n          self.ctx.putImageData(canvasData, self.originX, self.originY);\r\n        }\r\n      } else if (shape.maskType === \"click\") {\r\n        const pixels: number[] = []; // 保存所有符合条件的像素的索引位置\r\n        const pixelData = self.getImagedataFromImageClass(maskImage, \"magic\");\r\n\r\n        if (pixelData) {\r\n          for (let i = 0; i < pixelData.length; i += 4) {\r\n            if (\r\n              pixelData[i] === 255 &&\r\n              pixelData[i + 1] === 255 &&\r\n              pixelData[i + 2] === 255\r\n            ) {\r\n              pixels.push(i);\r\n            }\r\n          }\r\n\r\n          shape.pixels = pixels;\r\n          shape.height = self.IMAGE_HEIGHT;\r\n          shape.weight = self.IMAGE_WIDTH;\r\n          shape.fillStyle = shape.strokeStyle;\r\n\r\n          shape.canvasData = self.putDataOnCanvas(\r\n            self.canvas,\r\n            pixels,\r\n            shape.fillStyle\r\n          );\r\n        } else {\r\n          console.error(\"Failed to get pixel data from mask image\");\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n  }\r\n\r\n  addPoint() {\r\n    const shape = this.activeShape;\r\n    if (\r\n      Object.keys(shape).length !== 0 &&\r\n      this.clickIndex > -1 &&\r\n      !this.readonly\r\n    ) {\r\n      const [x, y] = this.activeShape.coor[this.clickIndex];\r\n      const nx = Math.round(x + 3);\r\n      const ny = Math.round(y + 3);\r\n      shape.coor.splice(this.clickIndex + 1, 0, [nx, ny]);\r\n      this.clickIndex++;\r\n      this.update();\r\n      this.manageDoneList(deepClone(this.dataset));\r\n    }\r\n  }\r\n\r\n  deletePoint() {\r\n    const shape = this.activeShape;\r\n    if (\r\n      Object.keys(shape).length !== 0 &&\r\n      shape.coor.length > 3 &&\r\n      this.clickIndex > -1 &&\r\n      !this.readonly\r\n    ) {\r\n      shape.coor.splice(this.clickIndex, 1);\r\n      this.update();\r\n      this.manageDoneList(deepClone(this.dataset));\r\n      this.clickIndex = -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制路径线段\r\n   * @param shape 标注实例\r\n   * @returns\r\n   */\r\n  drawPencil(shape: Pencil) {\r\n    const {\r\n      strokeStyle,\r\n      fillStyle,\r\n      active,\r\n      creating,\r\n      coor,\r\n      // innerCoor,\r\n      lineWidth\r\n    } = shape;\r\n\r\n    this.ctx.save();\r\n\r\n    this.ctx.lineJoin = \"round\";\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.lineWidth = lineWidth || this.pencillineWidth;\r\n\r\n    const strokeColor =\r\n      active || creating\r\n        ? this.activeStrokeStyle\r\n        : strokeStyle || this.pencilstrokeStyle;\r\n    const fillColor =\r\n      active || creating\r\n        ? this.activeFillStyle\r\n        : fillStyle || this.pencilstrokeStyle;\r\n\r\n    this.ctx.scale(this.scale, this.scale);\r\n\r\n    this.ctx.beginPath();\r\n\r\n    // --- 检查是否已完成（包含 -1, -1）\r\n    const isClosed = coor.some((pt) => pt[0] === -1 && pt[1] === -1);\r\n\r\n    // --- 分段绘制函数 ---\r\n    const drawPathSegments = (points: [number, number][]) => {\r\n      let segment: [number, number][] = [];\r\n\r\n      for (const point of points) {\r\n        if (point[0] === -1 && point[1] === -1) {\r\n          if (segment.length > 1) {\r\n            this.ctx.moveTo(segment[0][0], segment[0][1]);\r\n            for (let i = 1; i < segment.length; i++) {\r\n              this.ctx.lineTo(segment[i][0], segment[i][1]);\r\n            }\r\n            this.ctx.closePath();\r\n          }\r\n          segment = [];\r\n        } else {\r\n          segment.push(point);\r\n        }\r\n      }\r\n\r\n      // 最后一段（未结束）\r\n      if (segment.length > 1) {\r\n        this.ctx.moveTo(segment[0][0], segment[0][1]);\r\n        for (let i = 1; i < segment.length; i++) {\r\n          this.ctx.lineTo(segment[i][0], segment[i][1]);\r\n        }\r\n        if (isClosed) this.ctx.closePath(); // 仅当闭合才首尾闭合\r\n      }\r\n    };\r\n\r\n    // --- 绘制 coor 主路径 ---\r\n    if (coor?.length) {\r\n      drawPathSegments(coor);\r\n    }\r\n\r\n    // // --- 绘制 innerCoor 镂空路径（仅当已闭合）---\r\n    // if (isClosed && innerCoor && Array.isArray(innerCoor)) {\r\n    //   for (const hole of innerCoor) {\r\n    //     if (hole?.length) {\r\n    //       drawPathSegments(hole);\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    // --- 仅闭合状态下填充 ---\r\n    if (isClosed) {\r\n      this.ctx.fillStyle = fillColor;\r\n      this.ctx.fill(\"evenodd\");\r\n    }\r\n\r\n    // 始终描边\r\n    this.ctx.strokeStyle = strokeColor;\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * 绘制label\r\n   * @param point 位置\r\n   * @param label 文本\r\n   */\r\n  drawLabel(point: Point, shape: AllShape, location: String = \"center\") {\r\n    const {\r\n      label = \"\",\r\n      labelFillStyle = \"\",\r\n      labelFontFamily = \"\",\r\n      textFillStyle = \"\",\r\n      hideLabel,\r\n      labelUp,\r\n      lineWidth,\r\n      coor\r\n    } = shape;\r\n\r\n    if (\r\n      !label.length ||\r\n      (typeof hideLabel === \"boolean\" ? hideLabel : this.hideLabel)\r\n    )\r\n      return;\r\n\r\n    const textPadding = { left: 4, top: 4 };\r\n    const newText =\r\n      label.length <= this.labelMaxLen\r\n        ? label\r\n        : `${label.slice(0, this.labelMaxLen)}...`;\r\n\r\n    // 设置字体缩放比例\r\n    const scaleFactor =\r\n      (this.textscaleStep >= 0 ? 1.1 : 0.9) ** Math.abs(this.textscaleStep);\r\n    this.ctx.font = `${this.labelFontSize * scaleFactor}px ${\r\n      labelFontFamily || \"sans-serif\"\r\n    }`;\r\n\r\n    const textMetrics = this.ctx.measureText(newText);\r\n    const labelWidth = textMetrics.width + textPadding.left * 2;\r\n    const labelHeight = parseInt(this.ctx.font) - 4 + textPadding.top * 2;\r\n\r\n    const currLineWidth = lineWidth || this.lineWidth;\r\n    const isLabelUp = typeof labelUp === \"boolean\" ? labelUp : this.labelUp;\r\n\r\n    const toLeft = this.IMAGE_ORIGIN_WIDTH - point[0] < labelWidth / this.scale;\r\n    const toTop =\r\n      this.IMAGE_ORIGIN_HEIGHT - point[1] < labelHeight / this.scale;\r\n    const toTop2 = point[1] > labelHeight / this.scale;\r\n    const isUp = isLabelUp ? toTop2 : toTop;\r\n\r\n    this.ctx.save();\r\n    this.ctx.fillStyle = labelFillStyle || this.labelFillStyle;\r\n\r\n    let [x, y] = point.map((a) => a * this.scale);\r\n\r\n    // 以 point 为中心创建 label\r\n    if ([1, 2, 5].includes(shape.type)) {\r\n      x -= labelWidth / 2;\r\n      if (location === \"top\") {\r\n        y -= labelHeight;\r\n      } else if (location === \"bottom\") {\r\n      } else {\r\n        y -= labelHeight / 2;\r\n      }\r\n    }\r\n\r\n    // 计算矩形位置\r\n    const rectX = toLeft\r\n      ? x - textMetrics.width - textPadding.left + currLineWidth / 2\r\n      : x + currLineWidth / 2;\r\n    const rectY = isUp\r\n      ? y - labelHeight - currLineWidth / 2\r\n      : y + currLineWidth / 2;\r\n\r\n    // 计算缩放后的矩形大小\r\n    const rectWidth = labelWidth;\r\n    const rectHeight = labelHeight;\r\n    this.ctx.fillRect(rectX, rectY, rectWidth, rectHeight);\r\n\r\n    // 设置文本样式\r\n    this.ctx.fillStyle = textFillStyle || this.textFillStyle;\r\n    this.ctx.textBaseline = \"middle\";\r\n\r\n    // 计算文本绘制位置\r\n    const textX = rectX + (rectWidth - textMetrics.width) / 2;\r\n    const textY = rectY + rectHeight / 2;\r\n\r\n    // 绘制文本\r\n    this.ctx.fillText(newText, textX, textY, rectWidth);\r\n    this.ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * 更新画布\r\n   */\r\n  update(toMask: boolean = false, initSize: boolean = false) {\r\n    window.cancelAnimationFrame(this.timer);\r\n    if (initSize) {\r\n      this.initZoom();\r\n    }\r\n    this.timer = window.requestAnimationFrame(() => {\r\n      this.ctx.save();\r\n      this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n      this.ctx.translate(this.originX, this.originY); // 位置映射，（0,0）对应着（this.originX, this.originY）\r\n      if (this.IMAGE_WIDTH && this.IMAGE_HEIGHT) {\r\n        if (toMask) {\r\n          // 获取图像的像素数据\r\n          const imageData = this.ctx.getImageData(\r\n            0,\r\n            0,\r\n            this.IMAGE_WIDTH,\r\n            this.IMAGE_HEIGHT\r\n          );\r\n          const data = imageData.data;\r\n\r\n          // 将所有像素的 RGB 值设置为 0 (黑色)\r\n          for (let i = 0; i < data.length; i += 4) {\r\n            data[i] = 0; // Red\r\n            data[i + 1] = 0; // Green\r\n            data[i + 2] = 0; // Blue\r\n            data[i + 3] = 255; // alpha\r\n          }\r\n\r\n          // 将修改后的像素数据重新放回画布\r\n          this.ctx.putImageData(imageData, this.originX, this.originY);\r\n        } else {\r\n          // console.log(\"this.imagesrc\", this.image.src);\r\n          // console.log(\"this.image1\", this.image);\r\n          if (!this.image.src.includes(\"undefined\")) {\r\n            if (this.imagealpha === 1) {\r\n              this.ctx.drawImage(\r\n                this.image,\r\n                0,\r\n                0,\r\n                this.IMAGE_WIDTH,\r\n                this.IMAGE_HEIGHT\r\n              );\r\n            } else {\r\n              this.ctx.globalAlpha = this.imagealpha;\r\n              this.ctx.drawImage(\r\n                this.image,\r\n                0,\r\n                0,\r\n                this.IMAGE_WIDTH,\r\n                this.IMAGE_HEIGHT\r\n              );\r\n              this.ctx.globalAlpha = 1.0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 专注模式下，只显示选中图形\r\n      const renderList = this.focusMode\r\n        ? this.activeShape.type\r\n          ? [this.activeShape]\r\n          : []\r\n        : this.dataset;\r\n      for (let i = 0; i < renderList.length; i++) {\r\n        const shape = renderList[i];\r\n        if (shape.hiddening) continue;\r\n        switch (shape.type) {\r\n          case Shape.Rect:\r\n            this.drawRect(shape as Rect);\r\n            break;\r\n          case Shape.Polygon:\r\n            this.drawPolygon(shape as Polygon);\r\n            break;\r\n          case Shape.Dot:\r\n            this.drawDot(shape as Dot);\r\n            break;\r\n          case Shape.Line:\r\n            this.drawLine(shape as Line);\r\n            break;\r\n          case Shape.Circle:\r\n            this.drawCirle(shape as Circle);\r\n            break;\r\n          case Shape.Grid:\r\n            this.drawGrid(shape as Grid);\r\n            break;\r\n          case Shape.Brush:\r\n            this.drawBrush(shape as Brush);\r\n            break;\r\n          case Shape.BrushMask:\r\n            this.drawBrushMask(shape as BrushMask);\r\n            break;\r\n          case Shape.Mask:\r\n            this.drawMask(shape as Mask);\r\n            break;\r\n          case Shape.Pencil:\r\n            this.drawPencil(shape as Pencil);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (\r\n        [\r\n          Shape.Rect,\r\n          Shape.Polygon,\r\n          Shape.Line,\r\n          Shape.Circle,\r\n          Shape.Grid\r\n        ].includes(this.activeShape.type) &&\r\n        !this.activeShape.hiddening\r\n      ) {\r\n        this.drawCtrlList(this.activeShape);\r\n      }\r\n      // 绘制智能标注点\r\n      if (this.magicPoints.length) {\r\n        for (const thisPrompt of this.magicPoints) {\r\n          this.drawPromptPointOnClick(thisPrompt, this.canvas);\r\n        }\r\n      }\r\n      this.ctx.restore();\r\n      this.emit(\"updated\", this.dataset);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 隐藏选中的图形\r\n   */\r\n  hideActiveShape(uuid: string) {\r\n    if (uuid) {\r\n      this.hideList.push(uuid);\r\n      for (let i = 0; i < this.dataset.length; i++) {\r\n        if (this.dataset[i].uuid === uuid) {\r\n          this.dataset[i].hiddening = true;\r\n          this.dataset[i].dragging = false;\r\n          this.dataset[i].active = false;\r\n          break;\r\n        }\r\n      }\r\n      this.update();\r\n      // this.manageDoneList(deepClone(this.dataset));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 显示隐藏的图形\r\n   */\r\n  showHiddenShape() {\r\n    if (this.hideList.length) {\r\n      for (let i = 0; i < this.dataset.length; i++) {\r\n        if (this.dataset[i].uuid === this.hideList[this.hideList.length - 1]) {\r\n          this.dataset[i].hiddening = false;\r\n          this.dataset[i].active = true;\r\n        } else {\r\n          this.dataset[i].active = false;\r\n        }\r\n      }\r\n      this.hideList.pop();\r\n      this.update();\r\n      // this.manageDoneList(deepClone(this.dataset));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 删除指定矩形\r\n   * @param index number\r\n   */\r\n  deleteByIndex(index: number) {\r\n    const num = this.dataset.findIndex((x) => x.index === index);\r\n    if (num > -1) {\r\n      this.emit(\"delete\", this.dataset[num]);\r\n      this.dataset.splice(num, 1);\r\n      this.dataset.forEach((item, i) => {\r\n        item.index = i;\r\n      });\r\n      this.update();\r\n      this.manageDoneList(deepClone(this.dataset));\r\n      // this.manageDoneList(deepClone(this.dataset));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 修改选中图像的标注信息\r\n   * @param tagId string\r\n   * @param label string\r\n   * @param color string\r\n   */\r\n  updateLabelByIndex(\r\n    index: number,\r\n    tagId: string,\r\n    label: string,\r\n    color: string,\r\n    properties: string[]\r\n  ) {\r\n    const updateProperties = (item: any) => {\r\n      properties.forEach((prop) => {\r\n        if (prop === \"label\") {\r\n          item.label = label;\r\n        } else if (prop === \"tagId\") {\r\n          item.tagId = tagId;\r\n        } else if (prop === \"strokeStyle\") {\r\n          // if(item.type === 7 && this.isRGBA(color)){\r\n          //     item.strokeStyle = this.rgbaToHex(color);\r\n          // } else {\r\n          item.strokeStyle = color;\r\n          // }\r\n        } else if (prop === \"textFillStyle\") {\r\n          item.textFillStyle = color;\r\n        } else if (prop === \"fillStyle\") {\r\n          // if(item.type === 7 && this.isRGBA(color)){\r\n          //     item.fillStyle = this.rgbaToHex(color);\r\n          // } else {\r\n          item.fillStyle = color;\r\n          // }\r\n        }\r\n      });\r\n    };\r\n\r\n    if (index !== -1) {\r\n      updateProperties(this.dataset[index]);\r\n      if (this.dataset[index].type === Shape.Pencil) {\r\n        this.emit(\"updateLabel\", this.dataset[index]);\r\n      }\r\n    } else {\r\n      // 注意:不能使用if(this.activeShape)判断，会始终为true\r\n      if (Object.keys(this.activeShape).length !== 0) {\r\n        updateProperties(this.activeShape);\r\n        if (this.activeShape.type === Shape.Pencil) {\r\n          this.emit(\"updateLabel\", this.activeShape);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.update();\r\n    this.manageDoneList(deepClone(this.dataset));\r\n  }\r\n\r\n  /**\r\n   * 删除画布中创建的所有图形\r\n   * @param index number\r\n   */\r\n  deleteAllShape() {\r\n    this.dataset = [];\r\n    this.update();\r\n    this.manageDoneList(deepClone(this.dataset));\r\n  }\r\n\r\n  /**\r\n   * 复制指定矩形  水平为x，竖直为y\r\n   * @param index number\r\n   */\r\n  copyByIndex(index: number) {\r\n    const num = this.dataset.findIndex((x) => x.index === index);\r\n    if (num > -1) {\r\n      if (this.activeShape.type === Shape.Rect) {\r\n        const newItem = deepClone(this.dataset[num]); // 深拷贝对象\r\n        const height = newItem.coor[1][1] - newItem.coor[0][1];\r\n        const width = newItem.coor[1][0] - newItem.coor[0][0];\r\n        const [x, y] = this.mouse || [];\r\n        // 鼠标位置未超出图片背景\r\n        if (this.isPointInBackground(this.mouse)) {\r\n          if (\r\n            this.isPointInBackground([\r\n              x + width * this.scale,\r\n              y + height * this.scale\r\n            ])\r\n          ) {\r\n            // 如果鼠标区域为左上角，右下角未超出\r\n            newItem.coor[0] = [\r\n              (x - this.originX) / this.scale,\r\n              (y - this.originY) / this.scale\r\n            ];\r\n            newItem.coor[1] = [\r\n              (x - this.originX) / this.scale + width,\r\n              (y - this.originY) / this.scale + height\r\n            ];\r\n          } else if (\r\n            this.isPointInBackground([\r\n              x - width * this.scale,\r\n              y - height * this.scale\r\n            ])\r\n          ) {\r\n            // 如果鼠标区域为右下角，左上角未超出\r\n            newItem.coor[0] = [\r\n              (x - this.originX) / this.scale - width,\r\n              (y - this.originY) / this.scale - height\r\n            ];\r\n            newItem.coor[1] = [\r\n              (x - this.originX) / this.scale,\r\n              (y - this.originY) / this.scale\r\n            ];\r\n          } else if (\r\n            this.isPointInBackground([\r\n              x + width * this.scale,\r\n              y - height * this.scale\r\n            ])\r\n          ) {\r\n            // 如果鼠标区域为左下角，右上角未超出\r\n            newItem.coor[0] = [\r\n              (x - this.originX) / this.scale,\r\n              (y - this.originY) / this.scale - height\r\n            ];\r\n            newItem.coor[1] = [\r\n              (x - this.originX) / this.scale + width,\r\n              (y - this.originY) / this.scale\r\n            ];\r\n          } else if (\r\n            this.isPointInBackground([\r\n              x - width * this.scale,\r\n              y + height * this.scale\r\n            ])\r\n          ) {\r\n            // 如果鼠标区域为右上角，左下角未超出\r\n            newItem.coor[0] = [\r\n              (x - this.originX) / this.scale - width,\r\n              (y - this.originY) / this.scale\r\n            ];\r\n            newItem.coor[1] = [\r\n              (x - this.originX) / this.scale,\r\n              (y - this.originY) / this.scale + height\r\n            ];\r\n          } else {\r\n            return;\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n        newItem.uuid = createUuid();\r\n        this.dataset.push(newItem); // 添加到 dataset 中\r\n        this.dataset[num].active = false;\r\n        this.dataset.forEach((item, i) => {\r\n          item.index = i;\r\n        });\r\n        this.update();\r\n        this.manageDoneList(deepClone(this.dataset));\r\n      } else if (this.activeShape.type === Shape.Dot) {\r\n        const newItem = deepClone(this.dataset[num]);\r\n        const [x, y] = this.mouse || [];\r\n        if (this.isPointInBackground(this.mouse)) {\r\n          newItem.coor[0] = (x - this.originX) / this.scale;\r\n          newItem.coor[1] = (y - this.originY) / this.scale;\r\n          // 防止位置重叠\r\n          if (\r\n            newItem.coor[0] == this.dataset[num].coor[0] &&\r\n            newItem.coor[1] == this.dataset[num].coor[1]\r\n          ) {\r\n            newItem.coor[0] += 2;\r\n            newItem.coor[1] += 2;\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n        newItem.uuid = createUuid();\r\n        this.dataset.push(newItem); // 添加到 dataset 中\r\n        this.dataset[num].active = false;\r\n        this.dataset.forEach((item, i) => {\r\n          item.index = i;\r\n        });\r\n        this.update();\r\n        this.manageDoneList(deepClone(this.dataset));\r\n      } else if (this.activeShape.type === Shape.Circle) {\r\n        const newItem = new Circle(\r\n          {\r\n            ...this.dataset[num], // 复制所有简单属性\r\n            coor: [...this.dataset[num].coor], // 深拷贝数组\r\n            radius: this.activeShape.radius // 深拷贝 radius\r\n          },\r\n          this.dataset[num].index\r\n        );\r\n        const [x, y] = this.mouse || [];\r\n        if (this.isPointInBackground(this.mouse)) {\r\n          newItem.coor[0] = (x - this.originX) / this.scale;\r\n          newItem.coor[1] = (y - this.originY) / this.scale;\r\n          let point1: Point = [x - newItem.radius, y]; //左顶点\r\n          let point2: Point = [x + newItem.radius, y]; //右顶点\r\n          let point3: Point = [x, y - newItem.radius]; //上顶点\r\n          let point4: Point = [x, y + newItem.radius]; //下顶点\r\n          if (!this.isPointInBackground(point1)) {\r\n            newItem.coor[0] = (x - this.originX) / this.scale + newItem.radius;\r\n            newItem.coor[1] = (y - this.originY) / this.scale;\r\n            if (!this.isPointInBackground(point2)) {\r\n              return;\r\n            }\r\n          }\r\n          if (!this.isPointInBackground(point2)) {\r\n            newItem.coor[0] = (x - this.originX) / this.scale - newItem.radius;\r\n            newItem.coor[1] = (y - this.originY) / this.scale;\r\n            if (!this.isPointInBackground(point1)) {\r\n              return;\r\n            }\r\n          }\r\n          if (!this.isPointInBackground(point3)) {\r\n            newItem.coor[0] = (x - this.originX) / this.scale;\r\n            newItem.coor[1] = (y - this.originY) / this.scale + newItem.radius;\r\n            if (!this.isPointInBackground(point4)) {\r\n              return;\r\n            }\r\n          }\r\n          if (!this.isPointInBackground(point4)) {\r\n            newItem.coor[0] = (x - this.originX) / this.scale;\r\n            newItem.coor[1] = (y - this.originY) / this.scale - newItem.radius;\r\n            if (!this.isPointInBackground(point3)) {\r\n              return;\r\n            }\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n        newItem.uuid = createUuid();\r\n        this.dataset.push(newItem); // 添加到 dataset 中\r\n        this.dataset[num].active = false;\r\n        this.dataset.forEach((item, i) => {\r\n          item.index = i;\r\n        });\r\n        this.update();\r\n        this.manageDoneList(deepClone(this.dataset));\r\n        return;\r\n      } else if (this.activeShape.type === Shape.Line) {\r\n        return;\r\n      } else if (this.activeShape.type === Shape.Polygon) {\r\n        return;\r\n      } else if (this.activeShape.type === Shape.Grid) {\r\n        return;\r\n      } else if (this.activeShape.type === Shape.None) {\r\n        return;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算缩放步长\r\n   */\r\n  // calcStep(flag = \"\") {\r\n  //   console.log(\"calcStep\");\r\n  //   // 如果图片小于指定的宽高，且 flag 为空或 'b'，执行放大操作\r\n  //   if (this.IMAGE_WIDTH < this.WIDTH && this.IMAGE_HEIGHT < this.HEIGHT) {\r\n  //     if (flag === \"\" || flag === \"b\") {\r\n  //       this.setScale(true, false, true); // 执行放大\r\n  //       // 仅在没有递归过的情况下才继续递归\r\n  //       if (flag !== \"b\") {\r\n  //         this.calcStep(\"b\"); // 递归调用，避免重复递归\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   // 如果图片大于指定的宽高，且 flag 为空或 's'，执行缩小操作\r\n  //   if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\r\n  //     if (flag === \"\" || flag === \"s\") {\r\n  //       this.setScale(false, false, true); // 执行缩小\r\n  //       // 仅在没有递归过的情况下才继续递归\r\n  //       if (flag !== \"s\") {\r\n  //         this.calcStep(\"s\"); // 递归调用，避免重复递归\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return;\r\n  // }\r\n  calcStep(flag = \"\") {\r\n    if (this.IMAGE_WIDTH < this.WIDTH && this.IMAGE_HEIGHT < this.HEIGHT) {\r\n      if (flag === \"\" || flag === \"b\") {\r\n        this.setScale(true, false, true);\r\n        this.calcStep(\"b\");\r\n      }\r\n    }\r\n    if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\r\n      if (flag === \"\" || flag === \"s\") {\r\n        this.setScale(false, false, true);\r\n        this.calcStep(\"s\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 缩放\r\n   * @param type true放大5%，false缩小5%\r\n   * @param center 缩放中心 center|mouse\r\n   * @param pure 不绘制\r\n   */\r\n  setScale(type: boolean, byMouse = false, pure = false) {\r\n    if (this.lock) return;\r\n    if (\r\n      (!type && this.imageMin < this.MIN_LENGTH) ||\r\n      (type && this.IMAGE_WIDTH > this.imageOriginMax * 10)\r\n    )\r\n      return;\r\n    if (type) {\r\n      this.scaleStep++;\r\n    } else {\r\n      this.scaleStep--;\r\n    }\r\n    let realToLeft = 0;\r\n    let realToRight = 0;\r\n    const [x, y] = this.mouse || [];\r\n    if (byMouse) {\r\n      realToLeft = (x - this.originX) / this.scale;\r\n      realToRight = (y - this.originY) / this.scale;\r\n    }\r\n    const abs = Math.abs(this.scaleStep);\r\n    const width = this.IMAGE_WIDTH;\r\n    this.IMAGE_WIDTH = Math.round(\r\n      this.IMAGE_ORIGIN_WIDTH * (this.scaleStep >= 0 ? 1.1 : 0.9) ** abs\r\n    );\r\n    this.IMAGE_HEIGHT = Math.round(\r\n      this.IMAGE_ORIGIN_HEIGHT * (this.scaleStep >= 0 ? 1.1 : 0.9) ** abs\r\n    );\r\n    if (byMouse) {\r\n      this.originX = x - realToLeft * this.scale;\r\n      this.originY = y - realToRight * this.scale;\r\n    } else {\r\n      const scale = this.IMAGE_WIDTH / width;\r\n      this.originX = this.WIDTH / 2 - (this.WIDTH / 2 - this.originX) * scale;\r\n      this.originY = this.HEIGHT / 2 - (this.HEIGHT / 2 - this.originY) * scale;\r\n    }\r\n    this.emit(\"scale\", { type: type, byMouse: byMouse, pure: pure });\r\n    if (!pure) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 适配背景图\r\n   */\r\n  fitZoom() {\r\n    this.calcStep();\r\n    if (this.IMAGE_HEIGHT / this.IMAGE_WIDTH >= this.HEIGHT / this.WIDTH) {\r\n      this.IMAGE_WIDTH =\r\n        this.IMAGE_ORIGIN_WIDTH / (this.IMAGE_ORIGIN_HEIGHT / this.HEIGHT);\r\n      this.IMAGE_HEIGHT = this.HEIGHT;\r\n    } else {\r\n      this.IMAGE_WIDTH = this.WIDTH;\r\n      this.IMAGE_HEIGHT =\r\n        this.IMAGE_ORIGIN_HEIGHT / (this.IMAGE_ORIGIN_WIDTH / this.WIDTH);\r\n    }\r\n    this.originX = (this.WIDTH - this.IMAGE_WIDTH) / 2;\r\n    this.originY = (this.HEIGHT - this.IMAGE_HEIGHT) / 2;\r\n    this.textscaleStep = 0;\r\n    this.emit(\"fitZoom\");\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * 恢复为原始图片尺寸\r\n   */\r\n  initZoom() {\r\n    // this.calcStep();\r\n    this.IMAGE_WIDTH = this.IMAGE_ORIGIN_WIDTH;\r\n    this.IMAGE_HEIGHT = this.IMAGE_ORIGIN_HEIGHT;\r\n    this.originX = (this.WIDTH - this.IMAGE_WIDTH) / 2;\r\n    this.originY = (this.HEIGHT - this.IMAGE_HEIGHT) / 2;\r\n    this.textscaleStep = 0;\r\n    // this.update();\r\n  }\r\n\r\n  /**\r\n   * 设置专注模式\r\n   * @param type {boolean}\r\n   */\r\n  setFocusMode(type: boolean) {\r\n    this.focusMode = type;\r\n    this.update();\r\n    // this.manageDoneList(deepClone(this.dataset));\r\n  }\r\n\r\n  manageDoneList(dataset: AllShape[]) {\r\n    this.doneList.push(dataset);\r\n    if (this.doneList.length > this.MAX_LENGTH) {\r\n      this.doneList.shift();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 撤销操作（目前不支持撤销隐藏、显示、专注等模式和状态切换）\r\n   * 若支持，需要设置一个操作数组，每次往doneList中push时，记录下操作类型。撤销时，执行相应的逆方法\r\n   */\r\n  undo() {\r\n    if (this.doneList.length > 1) {\r\n      this.clickIndex = -1; // 重置点击索引\r\n      const lastDoneItem = this.doneList[this.doneList.length - 1];\r\n      this.undoList.push(lastDoneItem);\r\n      this.doneList.pop();\r\n      const newShapes = deepClone(this.doneList[this.doneList.length - 1]);\r\n      this.setData(newShapes, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重做操作\r\n   */\r\n  redo() {\r\n    if (this.undoList.length > 0) {\r\n      this.clickIndex = -1; // 重置点击索引\r\n      const lastDoneItem = this.undoList[this.undoList.length - 1];\r\n      this.manageDoneList(lastDoneItem);\r\n      this.undoList.pop();\r\n      const newShapes = deepClone(this.doneList[this.doneList.length - 1]);\r\n      this.setData(newShapes, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁\r\n   */\r\n  destroy() {\r\n    if (!this.canvas) return;\r\n    this.image.removeEventListener(\"load\", this.handleLoad);\r\n    this.canvas.removeEventListener(\"contextmenu\", this.handleContextmenu);\r\n    this.canvas.removeEventListener(\"mousewheel\", this.handleMousewheel);\r\n    this.canvas.removeEventListener(\"wheel\", this.handleMousewheel);\r\n    this.canvas.removeEventListener(\"mousedown\", this.handleMouseDown);\r\n    this.canvas.removeEventListener(\"touchstart\", this.handleMouseDown);\r\n    this.canvas.removeEventListener(\"mousemove\", this.handleMouseMove);\r\n    this.canvas.removeEventListener(\"touchmove\", this.handleMouseMove);\r\n    this.canvas.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n    this.canvas.removeEventListener(\"touchend\", this.handleMouseUp);\r\n    this.canvas.removeEventListener(\"dblclick\", this.handleDblclick);\r\n    document.body.removeEventListener(\"keydown\", this.handleKeydown, true);\r\n    document.body.removeEventListener(\"keyup\", this.handleKeyup, true);\r\n    this.canvas.width = this.WIDTH;\r\n    this.canvas.height = this.HEIGHT;\r\n    this.canvas.style.width = null;\r\n    this.canvas.style.height = null;\r\n    this.canvas.style.userSelect = null;\r\n  }\r\n\r\n  /**\r\n   * 重新设置画布大小\r\n   */\r\n  resize(\r\n    width: number,\r\n    height: number,\r\n    alpha: number = 1,\r\n    imageurl: string = \"\"\r\n  ) {\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n    this.canvas.style.width = String(width) + \"px\";\r\n    this.canvas.style.height = String(height) + \"px\";\r\n    if (imageurl !== \"\" || this.imagesrc === undefined) {\r\n      this.imagesrc = imageurl;\r\n    }\r\n    this.setImage(this.imagesrc, alpha);\r\n    this.initSetting();\r\n    this.update();\r\n  }\r\n}\r\n"],"names":["createUuid","s","hexDigits","i","m","Math","floor","random","slice","n","join","isPointInPolygon","x","y","vertices","inside","length","j","xi","yi","xj","yj","deepClone","obj","hash","WeakMap","has","get","ImageData","newImageData","Uint8ClampedArray","data","width","height","set","Date","getTime","RegExp","source","flags","Map","result_1","forEach","value","key","Set","result_2","add","Array","isArray","result_3","item","index","result","Object","create","getPrototypeOf","Reflect","ownKeys","deepEqual","obj1","obj2","keysToCompare","type","maskKeysToCompare_1","__values","maskKeysToCompare_1_1","done","next","keys1","keys","keys1_1","keys1_1_1","Shape","this","tagId","label","labelId","labelType","truncated","coor","active","creating","dragging","hiddening","locking","uuid","assign","Rect","_super","_this","call","iscontour","__extends","defineProperty","prototype","_a","__read","_b","x0","y0","_c","x1","y1","Polygon","Dot","color","EventBus","_eventTree","on","eventName","cb","fns","push","emit","payload","_i","arguments","fn","apply","__spreadArray","off","find","splice","Line","Circle","radius","Grid","row","col","selected","_d","strokeStyle","fillStyle","lineWidth","w","h","list","startPoint","shape","Brush","brushWidth","iseraser","boundingRect","Mask","maskType","maskBase64","pixels","canvasData","weight","maskToPolygon","magicPoints","BrushMask","encodePixelData","DEFAULT_COMPARE","a","b","SplayTree","constructor","compare","noDuplicates","_compare","_root","_size","_noDuplicates","rotateLeft","right","left","parent","rotateRight","_splay","p","splay","gp","ggp","l","r","replace","u","v","minNode","maxNode","insert","z","comp","cmp","contains","node","comparator","remove","removeNode","erase","t","sMax","pop","returnValue","successor","prev","predecessor","callback","current","range","low","high","ctx","Q","values","at","load","presort","Error","size","sort","loadRecursive","min","max","isEmpty","createTree","start","end","middle","pivot","tmp","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","event","operation","inOut","otherInOut","isSubject","isVertical","prevInResult","inResult","isInResult","resultTransition","isIn","thisIn","thatIn","determineResultTransition","SweepEvent","point","otherEvent","edgeType","otherPos","outputContourId","isExteriorRing","isBelow","p0","p1","isAbove","clone","copy","contourId","equals","p2","epsilon","splitter","resulterrbound","sum","elen","e","flen","f","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","Float64Array","ccwerrboundA","ccwerrboundB","ccwerrboundC","B","C1","C2","D","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","abs","acxtail","acytail","bcxtail","bcytail","c","ahi","alo","bhi","blo","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","estimate","errbound","C1len","C2len","Dlen","orient2dadapt","signedArea","res","compareEvents","e1","e2","specialCases","divideSegment","se","queue","console","warn","crossProduct","dotProduct","possibleIntersection","se1","se2","inter","a1","a2","b1","b2","noEndpointTouch","va","vb","toPoint","d","kross","sqrKross","sqrLenA","sa","sb","smin","smax","intersection","nintersections","events","leftCoincide","rightCoincide","compareSegments","le1","le2","Contour","points","holeIds","holeOf","depth","isExterior","nextPos","pos","resultEvents","processed","origPos","newPos","initializeContourFromContext","contours","contour","lowerContourId","lowerContour","parentContourId","connectEdges","sortedEvents","len","sorted","orderEvents","markAsProcessed","initial","TinyQueue","defaultCompare","_down","tinyqueueModule","exports","default","_up","top","peek","halfLength","best","processPolygon","contourOrHole","bbox","s2","undefined","EMPTY","boolean","subject","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","Queue","polygonSet","ii","jj","fillQueue","concat","compareBBoxes","sweepLine","Tree","rightbound","begin","prevEvent","prevprevEvent","prevprev","subdivideSegments","polygons","rings","holeId","union","diff","CanvasSelect","el","src","version","pkg","lock","readonly","MIN_WIDTH","MIN_HEIGHT","MIN_RADIUS","MIN_POINTNUM","MIN_LENGTH","activeStrokeStyle","activeFillStyle","ctrlStrokeStyle","ctrlFillStyle","ctrlRadius","hideLabel","labelFillStyle","labelFontFamily","labelFontSize","textFillStyle","labelMaxLen","WIDTH","HEIGHT","imagesrc","imagealpha","olddataset","dataset","MAX_LENGTH","doneList","undoList","hideList","remmberOrigin","createType","None","ctrlIndex","clickIndex","image","Image","IMAGE_WIDTH","IMAGE_ORIGIN_HEIGHT","IMAGE_HEIGHT","originX","originY","scaleStep","textscaleStep","scrollZoom","dblTouch","dblTouchStore","alpha","focusMode","scaleTouchStore","isTouch2","isMobile","navigator","userAgent","includes","labelUp","isCtrlKey","ctrlCode","gridMenuEnable","gridSelectedFillStyle","ispainting","brushlineWidth","brushstrokeStyle","pencillineWidth","pencilstrokeStyle","mask_alpha","densityFactor","activeCanvasData","activePolygon","isEraser","isErasing","eraserPoints","tempBrushPoints","eraserSize","random_color","g","isMagicToolActive","maxLinePointCount","closePolygon","poly","closedPoly","filter","getImagedataFromImageClass","masktype","maskCanvas","document","createElement","maskContext","getContext","willReadFrequently","error","tmpCanvas","tmpContext","drawImage","imageData","getImageData","pixelData","imageMask","maskData","colorIndex","putImageData","scaledCanvas","scaledContext","drawPromptPointOnClick","thisPrompt","canvas","scale","strokeColor","context","beginPath","arc","PI","fill","stroke","handleLoad","bind","handleContextmenu","handleMousewheel","handleMouseDown","handleMouseMove","handleMouseUp","handleDblclick","handleKeyup","handleKeydown","container","querySelector","HTMLCanvasElement","offScreen","initSetting","initEvents","setImage","red","green","blue","IMAGE_ORIGIN_WIDTH","mergeEvent","mouseX","mouseY","mouseCX","mouseCY","touches","clientX","clientY","target","getBoundingClientRect","top_1","round","clientX1","_e","clientY1","offsetX","offsetY","__assign","fitZoom","preventDefault","evt","stopPropagation","mouse","deltaY","imageMin","imageOriginMax","setScale","buttons","ctrls","activeShape","ctrlsData","findIndex","isPointInCircle","log","update","remmber","isInBackground","nx","ny","hitOnShape","hitShapeIndex_1","hitShape","removeDuplicatePoints","resultRect","Pencil","pt","newShape","curPoint","sp","rowCol","prompt","_f","split","test","Number","_g","_h","a0","b0","newPoint","newRadius","noLimit","_k","tar","_l","sqrt","pow","which","touch0","touch1","cur","now","resultCoor","pencilItem","closedPoly1","closedPoly2","intersectionResult","unionResult","martinez.union","bMinusA","martinez.diff","AMinusB","manageDoneList","canPolygon","canLine","gridRects","rect","isPointInRect","thisIndex","code","activeElement","body","deleteByIndex","copyByIndex","dpr","window","devicePixelRatio","style","userSelect","clientWidth","clientHeight","offScreenCtx","addEventListener","removeEventListener","getscaledPoint","url","crossOrigin","handleMaskShape","tempshape","maskImage","Promise","resolve","reject","onload","putDataOnCanvas","polygonShape","getContourPointsOfColoredRegion","onerror","err","setData","needCreate","toMask","initSize","setTimeout","__awaiter","initdata","itemIndexMap_1","data_1","data_1_1","toString","mousePoint","hitShapeIndex","isPointInBackground","isPointInLine","isMouseInPixelsRegion","hitOnShapeVertex","pointX","pointY","map","isPointOnRectEdge","onLeftEdge","onRightEdge","onTopEdge","onBottomEdge","isPointOnRectVertex","onLeftTopPoint","onRightBottomEdge","onRightTopEdge","onLeftBottomEdge","save","clearRect","translate","moveTo","lineTo","closePath","areaData","restore","isPointOnPolygonVertex","some","center","isPointOnCircleVertex","getBoundingBoxOfColoredRegion","xMin","xMax","yMin","yMax","contourPoints","isBorderPoint","uniquePoints","sampledPoints","samplePointsByDensity","sortByPolarAngle","directions_1","directions_1_1","dx","dy","step","calculateCentroid","sumX","sumY","points_1","points_1_1","count","calculatePolarAngle","atan2","isNested","shape1","shape2","x2","y2","x3","y3","x4","y4","vertices1","vertices2","_m","drawRect","sub","setLineDash","fillRect","strokeRect","drawLabel","drawPolygon","lineJoin","calculateCenter","drawDot","drawCirle","drawLine","hexToRGBA","hex","hexCode","char","parseInt","rgbaToHex","rgba","includeAlpha","rgbaArray","trim","match","parseFloat","hexR","padStart","hexG","hexB","hexA","isRGBA","getBunding","removePoints","seen","maxX","minX","maxY","minY","points_2","points_2_1","lastPoint","hypot","relEncodeBinary","scaledWidth","scaledHeight","offscreenBig","offscreenSmall","smallCtx","isBackground","idx","relDecodeBinary","encoded","nonWhiteColor","fillColor","colorStr","parts","isNaN","parseRGBA","totalPixels","i_1","dataIndex","mergeToBrushMask","brushMask","drawBrush","lineCap","globalCompositeOperation","drawBrushMask","offCanvas","drawGrid","selectedFillStyle","isSelected","drawCtrl","drawCtrlList","reduce","acc","thisCanvas","thisContext","replacementColor","highlightMask","activeColor","changeMaskPolygon","endMagicTool","drawMask","self","addPoint","deletePoint","drawPencil","isClosed","segment","points_3","points_3_1","drawPathSegments","location","textPadding","newText","scaleFactor","font","textMetrics","measureText","labelWidth","labelHeight","currLineWidth","isLabelUp","toLeft","toTop","toTop2","isUp","rectX","rectY","rectWidth","rectHeight","textBaseline","textX","textY","fillText","cancelAnimationFrame","timer","initZoom","requestAnimationFrame","globalAlpha","renderList","hideActiveShape","showHiddenShape","num","updateLabelByIndex","properties","updateProperties","prop","deleteAllShape","newItem","point1","point2","point3","point4","calcStep","flag","byMouse","pure","realToLeft","realToRight","setFocusMode","shift","undo","lastDoneItem","newShapes","redo","destroy","resize","imageurl","String"],"mappings":"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"}